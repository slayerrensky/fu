[{"url":"https://api.github.com/repos/owncloud/core/issues/comments/9296919","html_url":"https://github.com/owncloud/core/pull/26#issuecomment-9296919","issue_url":"https://api.github.com/repos/owncloud/core/issues/26","id":9296919,"user":{"login":"scroogie","id":1218488,"avatar_url":"https://gravatar.com/avatar/6ddd538597adee876eda285aab0a1223?d=https%3a%2f%2fidenticons.github.com%2f32191fa6664a5e5e50ef576a6bec2dd4.png&r=x","gravatar_id":"6ddd538597adee876eda285aab0a1223","url":"https://api.github.com/users/scroogie","html_url":"https://github.com/scroogie","followers_url":"https://api.github.com/users/scroogie/followers","following_url":"https://api.github.com/users/scroogie/following{/other_user}","gists_url":"https://api.github.com/users/scroogie/gists{/gist_id}","starred_url":"https://api.github.com/users/scroogie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scroogie/subscriptions","organizations_url":"https://api.github.com/users/scroogie/orgs","repos_url":"https://api.github.com/users/scroogie/repos","events_url":"https://api.github.com/users/scroogie/events{/privacy}","received_events_url":"https://api.github.com/users/scroogie/received_events","type":"user","site_admin":false},"created_at":"2012-10-10t10:37:28z","updated_at":"2012-10-10t10:37:28z","body":"hi there, \r\n\r\nthis is my first review of an owncloud patch, so please bear with me if i'm wrong on some points. i just saw the review request on the ml and thought this is a good opportunity to give something back to owncloud. now on to the patch. \r\nsorry if i sound overly critic, i just try to be accurate.\r\n\r\nfirst some general remarks: \r\n\r\n - the patch includes some changes of \" to ' for array keys. this is all commendable and that, but i have a problem with such on-the-fly changes of unrelated things. it takes away from the real issue this is about. in my opinion, there should be a seperate issue that patches all of these occurences in owncloud, if and only if this is a suggestion in the coding guidelines. otherwise it will end up inconsistent all over the place. \r\n\r\n - the patch also includes new methods for the preferences api. that is another seperate issue in my point of view. in that issue, the sanity of the api can be discussed. this issue here is about token generation.\r\n -- in such an issue one could discuss the introduction of the created field in the database table. is not null default '0' sensible for the upgrade path?\r\n -- why is the field called \"created\", while it is changed on update? (and thus is more an mtime) \r\n -- then there is an introduction of \"multivalues\". if i understood this correctly, this is a preferences key that can appear multiple times with different values (or at least the functionality lets me think that). if you call with an $oldval that is not yet in the table, it will create a new entry, leaving the old one intact. the rest of the api does not really honor such values as far as i can see. also, how does the db react to something like that? there is an index on userid, appid, configkey. in my opinion, such an api introduction can have some sideeffects (and wrong usage if its unclear).\r\n -- there is a method deletekey() in preferences. it takes $user, $app, $key and deletes the corresponding entry. this patch introduces a method \"deletevalues\". it takes $user, $app, $key, $date. now this is in my opinion a bit confusing. why does a method deletevalues take a key? why does it take a date? of course, what it does is it deletes all values of a key that are older than $date, but perhaps its the wrong name then? notice that deletekey also deletes *all* values of a key.\r\n\r\nabout the new token system:\r\n\r\ni'm not sure that the proposed system is really an improvement. for example, in the old system, a stolen credential would always invalidate after 90 days. in the new system, a stolen credential stays usable, no matter what happens, as long as the thief visits the page at least once in 90 days. even if the user changes his password. or does owncloud invalidate all rememberme cookies on password change? (it should of course). additionally, there is no way for the user to notice this, if he has two valid credentials, because the other one will not be invalidated. so if a user logs in n times, and always deletes the cookie thereafter, there will be n valid session cookies in the database, open for attack. \r\n"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/9316725","html_url":"https://github.com/owncloud/core/pull/26#issuecomment-9316725","issue_url":"https://api.github.com/repos/owncloud/core/issues/26","id":9316725,"user":{"login":"bartv2","id":2227877,"avatar_url":"https://gravatar.com/avatar/c2d86a0a66a4be2c904e24034e842f44?d=https%3a%2f%2fidenticons.github.com%2f05e8b1362feb118a386dfd282b20fb84.png&r=x","gravatar_id":"c2d86a0a66a4be2c904e24034e842f44","url":"https://api.github.com/users/bartv2","html_url":"https://github.com/bartv2","followers_url":"https://api.github.com/users/bartv2/followers","following_url":"https://api.github.com/users/bartv2/following{/other_user}","gists_url":"https://api.github.com/users/bartv2/gists{/gist_id}","starred_url":"https://api.github.com/users/bartv2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bartv2/subscriptions","organizations_url":"https://api.github.com/users/bartv2/orgs","repos_url":"https://api.github.com/users/bartv2/repos","events_url":"https://api.github.com/users/bartv2/events{/privacy}","received_events_url":"https://api.github.com/users/bartv2/received_events","type":"user","site_admin":false},"created_at":"2012-10-10t19:43:45z","updated_at":"2012-10-10t19:44:39z","body":"this reminded me that i had a different sollution that i hadn't pushed. this is in multi_cookie_login of core. i think my solution is cleaner and doesn't need database changes specially for login cookies."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/9321526","html_url":"https://github.com/owncloud/core/pull/26#issuecomment-9321526","issue_url":"https://api.github.com/repos/owncloud/core/issues/26","id":9321526,"user":{"login":"visit1985","id":2237222,"avatar_url":"https://gravatar.com/avatar/7650c5311e8e82cf041068c691fa7bfc?d=https%3a%2f%2fidenticons.github.com%2ff0ad9b08d1a5eb2c37c549d2c4b4f6a4.png&r=x","gravatar_id":"7650c5311e8e82cf041068c691fa7bfc","url":"https://api.github.com/users/visit1985","html_url":"https://github.com/visit1985","followers_url":"https://api.github.com/users/visit1985/followers","following_url":"https://api.github.com/users/visit1985/following{/other_user}","gists_url":"https://api.github.com/users/visit1985/gists{/gist_id}","starred_url":"https://api.github.com/users/visit1985/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/visit1985/subscriptions","organizations_url":"https://api.github.com/users/visit1985/orgs","repos_url":"https://api.github.com/users/visit1985/repos","events_url":"https://api.github.com/users/visit1985/events{/privacy}","received_events_url":"https://api.github.com/users/visit1985/received_events","type":"user","site_admin":false},"created_at":"2012-10-10t22:09:09z","updated_at":"2012-10-10t22:09:09z","body":"thanks for the review @scroogie! i'll keep it in mind.\r\n\r\n@bartv2 your approach is much better than mine, but i found some issues in it:\r\n\r\n* we should delete all outdated tokens from the $tokens array (and database) before checking it against the cookie.\r\n* the call of deletekey() after the authentication failed is wrong because the key was not part of the array and doesn't exist in the database.\r\n* we should use oc_util::generate_random_bytes() instead of time() in the token generation to improve security.\r\n* as @scroogie wrote, we should delete all tokens on password change.\r\n* we should delete and recreate a token after it is used for authentication. this will improve security some more.\r\n\r\ni found this blog entry very inspiring: [persistent login cookie best practice](http://fishbowl.pastiche.org/2004/01/19/persistent_login_cookie_best_practice/)\r\n\r\n@bartv2 if you want i can assist you in coding. but i don't want to take it away from you ;)\r\n\r\np.s.: in a next step maybe we should add a password dialog for accessing the users personal settings to ensure, a unauthorized person can not change the users password.\r\n\r\np.p.s.: there is indeed a coding guideline which says: \"double quotes in html, single quotes in javascript & php\" ;)"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/9331613","html_url":"https://github.com/owncloud/core/pull/26#issuecomment-9331613","issue_url":"https://api.github.com/repos/owncloud/core/issues/26","id":9331613,"user":{"login":"bartv2","id":2227877,"avatar_url":"https://gravatar.com/avatar/c2d86a0a66a4be2c904e24034e842f44?d=https%3a%2f%2fidenticons.github.com%2f05e8b1362feb118a386dfd282b20fb84.png&r=x","gravatar_id":"c2d86a0a66a4be2c904e24034e842f44","url":"https://api.github.com/users/bartv2","html_url":"https://github.com/bartv2","followers_url":"https://api.github.com/users/bartv2/followers","following_url":"https://api.github.com/users/bartv2/following{/other_user}","gists_url":"https://api.github.com/users/bartv2/gists{/gist_id}","starred_url":"https://api.github.com/users/bartv2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bartv2/subscriptions","organizations_url":"https://api.github.com/users/bartv2/orgs","repos_url":"https://api.github.com/users/bartv2/repos","events_url":"https://api.github.com/users/bartv2/events{/privacy}","received_events_url":"https://api.github.com/users/bartv2/received_events","type":"user","site_admin":false},"created_at":"2012-10-11t07:56:54z","updated_at":"2012-10-11t07:56:54z","body":"@visit1985 i don't mind you taking the lead with this, i'm working on other things at the moment."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/9332407","html_url":"https://github.com/owncloud/core/pull/26#issuecomment-9332407","issue_url":"https://api.github.com/repos/owncloud/core/issues/26","id":9332407,"user":{"login":"visit1985","id":2237222,"avatar_url":"https://gravatar.com/avatar/7650c5311e8e82cf041068c691fa7bfc?d=https%3a%2f%2fidenticons.github.com%2ff0ad9b08d1a5eb2c37c549d2c4b4f6a4.png&r=x","gravatar_id":"7650c5311e8e82cf041068c691fa7bfc","url":"https://api.github.com/users/visit1985","html_url":"https://github.com/visit1985","followers_url":"https://api.github.com/users/visit1985/followers","following_url":"https://api.github.com/users/visit1985/following{/other_user}","gists_url":"https://api.github.com/users/visit1985/gists{/gist_id}","starred_url":"https://api.github.com/users/visit1985/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/visit1985/subscriptions","organizations_url":"https://api.github.com/users/visit1985/orgs","repos_url":"https://api.github.com/users/visit1985/repos","events_url":"https://api.github.com/users/visit1985/events{/privacy}","received_events_url":"https://api.github.com/users/visit1985/received_events","type":"user","site_admin":false},"created_at":"2012-10-11t08:32:58z","updated_at":"2012-10-11t08:32:58z","body":"ok, than i will do that and come back to you for a review.\r\n\r\nplease close this merge request."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/9332628","html_url":"https://github.com/owncloud/core/pull/26#issuecomment-9332628","issue_url":"https://api.github.com/repos/owncloud/core/issues/26","id":9332628,"user":{"login":"deepdiver1975","id":1005065,"avatar_url":"https://gravatar.com/avatar/bdba071ed68da9ce8edae53c364902ef?d=https%3a%2f%2fidenticons.github.com%2f67e101ad9531b7d25697b76e503e062e.png&r=x","gravatar_id":"bdba071ed68da9ce8edae53c364902ef","url":"https://api.github.com/users/deepdiver1975","html_url":"https://github.com/deepdiver1975","followers_url":"https://api.github.com/users/deepdiver1975/followers","following_url":"https://api.github.com/users/deepdiver1975/following{/other_user}","gists_url":"https://api.github.com/users/deepdiver1975/gists{/gist_id}","starred_url":"https://api.github.com/users/deepdiver1975/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepdiver1975/subscriptions","organizations_url":"https://api.github.com/users/deepdiver1975/orgs","repos_url":"https://api.github.com/users/deepdiver1975/repos","events_url":"https://api.github.com/users/deepdiver1975/events{/privacy}","received_events_url":"https://api.github.com/users/deepdiver1975/received_events","type":"user","site_admin":false},"created_at":"2012-10-11t08:43:08z","updated_at":"2012-10-11t08:43:08z","body":"gentlemen - this is how software development in a community should work!\r\nthanks a lot - i really feel happy!\r\n\r\ni'm looking forward to see more detailed reviews and constructive follow-up discussions like this"}]