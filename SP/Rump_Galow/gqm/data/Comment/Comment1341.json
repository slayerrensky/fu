[{"url":"https://api.github.com/repos/owncloud/core/issues/comments/12794178","html_url":"https://github.com/owncloud/core/issues/1341#issuecomment-12794178","issue_url":"https://api.github.com/repos/owncloud/core/issues/1341","id":12794178,"user":{"login":"mtgap","id":1097106,"avatar_url":"https://gravatar.com/avatar/454a73ee5feeb428d0c163a48903332c?d=https%3a%2f%2fidenticons.github.com%2f52d29a66f285a1d61125dd69ac0766b2.png&r=x","gravatar_id":"454a73ee5feeb428d0c163a48903332c","url":"https://api.github.com/users/mtgap","html_url":"https://github.com/mtgap","followers_url":"https://api.github.com/users/mtgap/followers","following_url":"https://api.github.com/users/mtgap/following{/other_user}","gists_url":"https://api.github.com/users/mtgap/gists{/gist_id}","starred_url":"https://api.github.com/users/mtgap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mtgap/subscriptions","organizations_url":"https://api.github.com/users/mtgap/orgs","repos_url":"https://api.github.com/users/mtgap/repos","events_url":"https://api.github.com/users/mtgap/events{/privacy}","received_events_url":"https://api.github.com/users/mtgap/received_events","type":"user","site_admin":false},"created_at":"2013-01-28t17:49:03z","updated_at":"2013-01-28t17:49:03z","body":"> isdeleteable() allways returns \"false\" for shares.\r\n\r\nwhat makes you think that? \r\n\r\n```php\r\n\tpublic function isdeletable($path) {\r\n\t\tif ($path == '') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn ($this->getpermissions($path) & ocp\\permission_delete);\r\n\t}\r\n```\r\n> but isdeletable() will always fail for post hooks when the file is already deleted/unshared\r\n\r\ni never said post_delete, i said the delete hook. of course isdeletable() will always return false after a post_delete for a ***local*** or ***shared*** file...\r\n> after receiving the delete hook you should call isdeletable and then getowner to figure out if the file will be deleted and where to move it to.\r\n\r\nthe shared file is deleted, it just may not be technically correct. just because you catch a delete hook from the filesystem doesn't guarantee that the file will actually be deleted. that applies to local storage as well.\r\n\r\n\r\nno separate action for unsharing from self, we still need to have support for this from webdav clients..."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/12797504","html_url":"https://github.com/owncloud/core/issues/1341#issuecomment-12797504","issue_url":"https://api.github.com/repos/owncloud/core/issues/1341","id":12797504,"user":{"login":"schiesbn","id":1589737,"avatar_url":"https://gravatar.com/avatar/8912b598c7b32dd25b87fd168e0b06b2?d=https%3a%2f%2fidenticons.github.com%2f0a323047dbe8329db30eae8dbe96e55e.png&r=x","gravatar_id":"8912b598c7b32dd25b87fd168e0b06b2","url":"https://api.github.com/users/schiesbn","html_url":"https://github.com/schiesbn","followers_url":"https://api.github.com/users/schiesbn/followers","following_url":"https://api.github.com/users/schiesbn/following{/other_user}","gists_url":"https://api.github.com/users/schiesbn/gists{/gist_id}","starred_url":"https://api.github.com/users/schiesbn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schiesbn/subscriptions","organizations_url":"https://api.github.com/users/schiesbn/orgs","repos_url":"https://api.github.com/users/schiesbn/repos","events_url":"https://api.github.com/users/schiesbn/events{/privacy}","received_events_url":"https://api.github.com/users/schiesbn/received_events","type":"user","site_admin":false},"created_at":"2013-01-28t18:54:52z","updated_at":"2013-01-28t19:39:13z","body":">what makes you think that? \r\n\r\nthis was the result of my test earlier today with the trash_bin branch. which is based on current master branch.\r\n\r\n> i never said post_delete, i said the delete hook.\r\n\r\ni know, for the trash bin i also use the delete hook. but this doesn't solves the problem that we also have apps which listen to the post_delete hook. i think that it is a fair assumption that a app which receives a (post_)delete hook, can expect that a delete operation was triggered. \r\n\r\n>the shared file is deleted, it just may not be technically correct.\r\n\r\nat the moment we call this operation \"unshare\" so this is neither technically correct nor from the user point of view. further we are talking here about technical behaviours and apps which want to detect delete operations and not unshare operations.\r\n\r\n>just because you catch a delete hook from the filesystem doesn't guarantee that the file will actually be deleted.\r\n\r\ncorrect. but it should at least guarantee that the intention was to delete a file because that's what a app is interested in if it listens to the delete hook\r\n\r\n>no separate action for unsharing from self, we still need to have support for this from webdav clients\r\n\r\nwe already have a unsahring action. but it triggers wrong hooks and covers real delete actions if a file could also be deleted by the recipient. if you don't want a unshare action at all at the moment i'm fine with it. even if i would consider this a step backward. but at least it would solve both problems stated above. but than we have to remove the existing unshare action,"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/12798745","html_url":"https://github.com/owncloud/core/issues/1341#issuecomment-12798745","issue_url":"https://api.github.com/repos/owncloud/core/issues/1341","id":12798745,"user":{"login":"schiesbn","id":1589737,"avatar_url":"https://gravatar.com/avatar/8912b598c7b32dd25b87fd168e0b06b2?d=https%3a%2f%2fidenticons.github.com%2f0a323047dbe8329db30eae8dbe96e55e.png&r=x","gravatar_id":"8912b598c7b32dd25b87fd168e0b06b2","url":"https://api.github.com/users/schiesbn","html_url":"https://github.com/schiesbn","followers_url":"https://api.github.com/users/schiesbn/followers","following_url":"https://api.github.com/users/schiesbn/following{/other_user}","gists_url":"https://api.github.com/users/schiesbn/gists{/gist_id}","starred_url":"https://api.github.com/users/schiesbn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schiesbn/subscriptions","organizations_url":"https://api.github.com/users/schiesbn/orgs","repos_url":"https://api.github.com/users/schiesbn/repos","events_url":"https://api.github.com/users/schiesbn/events{/privacy}","received_events_url":"https://api.github.com/users/schiesbn/received_events","type":"user","site_admin":false},"created_at":"2013-01-28t19:17:09z","updated_at":"2013-01-28t19:17:09z","body":"there is another problem which can't be solved by just calling isdeletable().\r\n\r\nuser a shares a file with the right to delete it to user b. when user b accesses his shared-folder he can only unshare and not delete the file (that's the second problem i described above). now user b unshares the file, the delete hooks gets triggered, someone catches it and call isdeletable() which will return true. but still the file was not deleted but only unshared. you can't relay on the assumption that we perform a delete operation if isdeletable() returns true. sure you might be able to do further tests and at some point you might be able to decide if it was a unshare or delete operation. but this can never be a solution, this will only be a hack around the real problem."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/12809852","html_url":"https://github.com/owncloud/core/issues/1341#issuecomment-12809852","issue_url":"https://api.github.com/repos/owncloud/core/issues/1341","id":12809852,"user":{"login":"mtgap","id":1097106,"avatar_url":"https://gravatar.com/avatar/454a73ee5feeb428d0c163a48903332c?d=https%3a%2f%2fidenticons.github.com%2f52d29a66f285a1d61125dd69ac0766b2.png&r=x","gravatar_id":"454a73ee5feeb428d0c163a48903332c","url":"https://api.github.com/users/mtgap","html_url":"https://github.com/mtgap","followers_url":"https://api.github.com/users/mtgap/followers","following_url":"https://api.github.com/users/mtgap/following{/other_user}","gists_url":"https://api.github.com/users/mtgap/gists{/gist_id}","starred_url":"https://api.github.com/users/mtgap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mtgap/subscriptions","organizations_url":"https://api.github.com/users/mtgap/orgs","repos_url":"https://api.github.com/users/mtgap/repos","events_url":"https://api.github.com/users/mtgap/events{/privacy}","received_events_url":"https://api.github.com/users/mtgap/received_events","type":"user","site_admin":false},"created_at":"2013-01-28t22:44:22z","updated_at":"2013-01-28t22:44:22z","body":"> i know, for the trash bin i also use the delete hook. but this doesn't solves the problem that we also have apps which listen to the post_delete hook. i think that it is a fair assumption that a app which receives a (post_)delete hook, can expect that a delete operation was triggered.\r\n\r\nthe file is *deleted* because the user no longer has access to the file on their filesystem... <- pretty much applies to every other response you had.\r\n\r\n> we already have a unsahring action. but it triggers wrong hooks and covers real delete actions if a file could also be deleted by the recipient. if you don't want a unshare action at all at the moment i'm fine with it. even if i would consider this a step backward. but at least it would solve both problems stated above. but than we have to remove the existing unshare action,\r\n\r\ni don't understand how that applies to the webdav clients. if you make it a separate action you won't be able to unshare from your self unless you go into the web ui.\r\n\r\n>user a shares a file with the right to delete it to user b. when user b accesses his shared-folder he can only unshare and not delete the file (that's the second problem i described above). now user b unshares the file, the delete hooks gets triggered, someone catches it and call isdeletable() which will return true. but still the file was not deleted but only unshared. \r\n\r\nit should delete the file if delete permission is granted, look at the code. if it doesn't, it's a bug. i suppose the label needs to be changed, but i still need to come up with a better solution for shared folder fileactions anyways.\r\n\r\n> you can't relay on the assumption that we perform a delete operation if isdeletable() returns true.\r\nthat's why i also suggested to check getowner() - move it to the owner's trash bin. \r\n\r\ni want someone else's opinion please."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/12826873","html_url":"https://github.com/owncloud/core/issues/1341#issuecomment-12826873","issue_url":"https://api.github.com/repos/owncloud/core/issues/1341","id":12826873,"user":{"login":"schiesbn","id":1589737,"avatar_url":"https://gravatar.com/avatar/8912b598c7b32dd25b87fd168e0b06b2?d=https%3a%2f%2fidenticons.github.com%2f0a323047dbe8329db30eae8dbe96e55e.png&r=x","gravatar_id":"8912b598c7b32dd25b87fd168e0b06b2","url":"https://api.github.com/users/schiesbn","html_url":"https://github.com/schiesbn","followers_url":"https://api.github.com/users/schiesbn/followers","following_url":"https://api.github.com/users/schiesbn/following{/other_user}","gists_url":"https://api.github.com/users/schiesbn/gists{/gist_id}","starred_url":"https://api.github.com/users/schiesbn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schiesbn/subscriptions","organizations_url":"https://api.github.com/users/schiesbn/orgs","repos_url":"https://api.github.com/users/schiesbn/repos","events_url":"https://api.github.com/users/schiesbn/events{/privacy}","received_events_url":"https://api.github.com/users/schiesbn/received_events","type":"user","site_admin":false},"created_at":"2013-01-29t09:36:22z","updated_at":"2013-01-29t09:51:31z","body":"[i updated the comment after retesting the unshare/delete behaviour]\r\n\r\n>the file is deleted because the user no longer has access to the file on their filesystem... <- pretty much applies to every other response you had.\r\n\r\neven if this is the users assumption from a users point of view (what would be inconsistent with the unshare button we already provide for the top-level shares to the user). internally it still makes sense to distinguish them. because internally apps may want to do different thinks with unshared than with deleted files.\r\n\r\n> i don't understand how that applies to the webdav clients. if you make it a separate action you won't be able to unshare from your self unless you go into the web ui.\r\n\r\nthe webdav clients are out of scope here. we already have some operations which are not accessible with the sync client, versions for example. if we decide to implement a proper \"unshare\" action i'm sure it will be possible to implement this in later versions of the sync clients like we might implement something to access the versions.\r\n\r\n>it should delete the file if delete permission is granted, look at the code. if it doesn't, it's a bug.\r\n\r\ni will check this once more, also with the sync client.\r\n\r\nupdate: i checked it and it seems like it really deletes the file since my last try if delete permission is set. if not it performs a unshare.\r\n\r\nto make this more consistent we need to change the label and make sure that the delete action is only shown to files where the delete permission is granted. at the moment this is not the case.\r\n\r\nas said before. i'm also fine with fixing it this way. this would also fix both problems stated in the initial message. still i would prefer to retain a unshare action. this enables the user to clean up his share folder by his own if he no longer needs access to some files.\r\n\r\nwith respect to the timetable for oc5 as a first step i would suggest to rename \"unshare\" to \"delete\" in the top level view and show it only when the delete permission is set. what do you think about it? this fixes the problems and makes the behaviour consistent."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/12862726","html_url":"https://github.com/owncloud/core/issues/1341#issuecomment-12862726","issue_url":"https://api.github.com/repos/owncloud/core/issues/1341","id":12862726,"user":{"login":"mtgap","id":1097106,"avatar_url":"https://gravatar.com/avatar/454a73ee5feeb428d0c163a48903332c?d=https%3a%2f%2fidenticons.github.com%2f52d29a66f285a1d61125dd69ac0766b2.png&r=x","gravatar_id":"454a73ee5feeb428d0c163a48903332c","url":"https://api.github.com/users/mtgap","html_url":"https://github.com/mtgap","followers_url":"https://api.github.com/users/mtgap/followers","following_url":"https://api.github.com/users/mtgap/following{/other_user}","gists_url":"https://api.github.com/users/mtgap/gists{/gist_id}","starred_url":"https://api.github.com/users/mtgap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mtgap/subscriptions","organizations_url":"https://api.github.com/users/mtgap/orgs","repos_url":"https://api.github.com/users/mtgap/repos","events_url":"https://api.github.com/users/mtgap/events{/privacy}","received_events_url":"https://api.github.com/users/mtgap/received_events","type":"user","site_admin":false},"created_at":"2013-01-29t22:37:43z","updated_at":"2013-01-29t22:37:43z","body":"do we really want to call it unshare? we're talking about the person shared with, not the owner. there's a completely different case when the owner actually unshares a file. i don't really like unshare from self either...\r\n\r\n> the webdav clients are out of scope here. we already have some operations which are not accessible with the sync client, versions for example. if we decide to implement a proper \"unshare\" action i'm sure it will be possible to implement this in later versions of the sync clients like we might implement something to access the versions.\r\n\r\ni don't think unsharing from your self is something to restrict to the web ui. from a user point of view i really see it as the same as deleting the file from your self.\r\n\r\n> with respect to the timetable for oc5 as a first step i would suggest to rename \"unshare\" to \"delete\" in the top level view and show it only when the delete permission is set. what do you think about it? this fixes the problems and makes the behaviour consistent.\r\n\r\nwe can possibly move unshare from self into the sharing dropdown. now, maybe @jancborchardt should show up."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/13126273","html_url":"https://github.com/owncloud/core/issues/1341#issuecomment-13126273","issue_url":"https://api.github.com/repos/owncloud/core/issues/1341","id":13126273,"user":{"login":"jancborchardt","id":925062,"avatar_url":"https://gravatar.com/avatar/2fd3f4d5d762955e5b603794a888fa97?d=https%3a%2f%2fidenticons.github.com%2f84ec51f9ceed468217d4e13abf78da9c.png&r=x","gravatar_id":"2fd3f4d5d762955e5b603794a888fa97","url":"https://api.github.com/users/jancborchardt","html_url":"https://github.com/jancborchardt","followers_url":"https://api.github.com/users/jancborchardt/followers","following_url":"https://api.github.com/users/jancborchardt/following{/other_user}","gists_url":"https://api.github.com/users/jancborchardt/gists{/gist_id}","starred_url":"https://api.github.com/users/jancborchardt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jancborchardt/subscriptions","organizations_url":"https://api.github.com/users/jancborchardt/orgs","repos_url":"https://api.github.com/users/jancborchardt/repos","events_url":"https://api.github.com/users/jancborchardt/events{/privacy}","received_events_url":"https://api.github.com/users/jancborchardt/received_events","type":"user","site_admin":false},"created_at":"2013-02-05t12:03:51z","updated_at":"2013-02-05t12:03:59z","body":"not really sure what exactly the question is. unsharing a file should not delete it from other people’s accounts, but rather remove the link. otherwise they will lose a file which was previously there and they might contributed in – effectively the file owner can delete files from their owncloud.\r\n\r\nlet me know what exactly you are talking about please, i can’t follow. :)"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/13127781","html_url":"https://github.com/owncloud/core/issues/1341#issuecomment-13127781","issue_url":"https://api.github.com/repos/owncloud/core/issues/1341","id":13127781,"user":{"login":"schiesbn","id":1589737,"avatar_url":"https://gravatar.com/avatar/8912b598c7b32dd25b87fd168e0b06b2?d=https%3a%2f%2fidenticons.github.com%2f0a323047dbe8329db30eae8dbe96e55e.png&r=x","gravatar_id":"8912b598c7b32dd25b87fd168e0b06b2","url":"https://api.github.com/users/schiesbn","html_url":"https://github.com/schiesbn","followers_url":"https://api.github.com/users/schiesbn/followers","following_url":"https://api.github.com/users/schiesbn/following{/other_user}","gists_url":"https://api.github.com/users/schiesbn/gists{/gist_id}","starred_url":"https://api.github.com/users/schiesbn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schiesbn/subscriptions","organizations_url":"https://api.github.com/users/schiesbn/orgs","repos_url":"https://api.github.com/users/schiesbn/repos","events_url":"https://api.github.com/users/schiesbn/events{/privacy}","received_events_url":"https://api.github.com/users/schiesbn/received_events","type":"user","site_admin":false},"created_at":"2013-02-05t12:51:01z","updated_at":"2013-02-05t12:51:35z","body":"@jancborchardt actually there are two problems. the first one is a technical one:\r\n\r\ncurrently we always trigger \"delete\" hooks even if it was an unshare operation. internally for the api this is really bad because it doesn't allow apps to know which action was performed.\r\n\r\nthe second question is if and how do we present a unshare action to the user? at the moment the root shared-folder labels the delete action as \"unshare\" and triggers either a unshare or a delete operation, depending on the permissions for the shared file. this is highly inconsistent and the operation doesn't always match the description (label) presented to the user. in the short run (for oc 5.0) i would suggest to show the delete action only if the user has the permission to delete the file and than always trigger a delete operation. this would be the same behaviour as for files within a shared folder.\r\n\r\nthis way the ui and the triggered action would become consistent again but we would lose the unshare action which leads to the second question: do we want to have a unshare action at all? i'm in favour of such a action. this allows the users to clean up their shared folders if they no longer needs access to a file. i would suggest to integrate this action into the share drop-down within the shared-folder. but than this should also trigger special \"unshare\" hooks to allow apps to either listen to delete operations or to unshare operations."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/22101541","html_url":"https://github.com/owncloud/core/issues/1341#issuecomment-22101541","issue_url":"https://api.github.com/repos/owncloud/core/issues/1341","id":22101541,"user":{"login":"jancborchardt","id":925062,"avatar_url":"https://gravatar.com/avatar/2fd3f4d5d762955e5b603794a888fa97?d=https%3a%2f%2fidenticons.github.com%2f84ec51f9ceed468217d4e13abf78da9c.png&r=x","gravatar_id":"2fd3f4d5d762955e5b603794a888fa97","url":"https://api.github.com/users/jancborchardt","html_url":"https://github.com/jancborchardt","followers_url":"https://api.github.com/users/jancborchardt/followers","following_url":"https://api.github.com/users/jancborchardt/following{/other_user}","gists_url":"https://api.github.com/users/jancborchardt/gists{/gist_id}","starred_url":"https://api.github.com/users/jancborchardt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jancborchardt/subscriptions","organizations_url":"https://api.github.com/users/jancborchardt/orgs","repos_url":"https://api.github.com/users/jancborchardt/repos","events_url":"https://api.github.com/users/jancborchardt/events{/privacy}","received_events_url":"https://api.github.com/users/jancborchardt/received_events","type":"user","site_admin":false},"created_at":"2013-08-05t11:58:09z","updated_at":"2013-08-05t11:58:09z","body":"what’s the status on this issue? @schiesbn please advise."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/22306000","html_url":"https://github.com/owncloud/core/issues/1341#issuecomment-22306000","issue_url":"https://api.github.com/repos/owncloud/core/issues/1341","id":22306000,"user":{"login":"schiesbn","id":1589737,"avatar_url":"https://gravatar.com/avatar/8912b598c7b32dd25b87fd168e0b06b2?d=https%3a%2f%2fidenticons.github.com%2f0a323047dbe8329db30eae8dbe96e55e.png&r=x","gravatar_id":"8912b598c7b32dd25b87fd168e0b06b2","url":"https://api.github.com/users/schiesbn","html_url":"https://github.com/schiesbn","followers_url":"https://api.github.com/users/schiesbn/followers","following_url":"https://api.github.com/users/schiesbn/following{/other_user}","gists_url":"https://api.github.com/users/schiesbn/gists{/gist_id}","starred_url":"https://api.github.com/users/schiesbn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schiesbn/subscriptions","organizations_url":"https://api.github.com/users/schiesbn/orgs","repos_url":"https://api.github.com/users/schiesbn/repos","events_url":"https://api.github.com/users/schiesbn/events{/privacy}","received_events_url":"https://api.github.com/users/schiesbn/received_events","type":"user","site_admin":false},"created_at":"2013-08-08t06:55:34z","updated_at":"2013-08-08t06:55:34z","body":"@jancborchardt it is solved in the sense that we removed the \"unshare\" function completely. now the delete button only shows up if a file can be deleted. for usability and user experience this is already a big improvement. still i would like to get a general unshare operation back, but this would probably be another feature request."}]