[{"url":"https://api.github.com/repos/owncloud/core/issues/comments/23749067","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-23749067","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":23749067,"user":{"login":"karlitschek","id":867445,"avatar_url":"https://gravatar.com/avatar/87ce2b4531ee1a0c32b50e0d8f049224?d=https%3a%2f%2fidenticons.github.com%2f06e7098636caebfc9c30c9f52eb905df.png&r=x","gravatar_id":"87ce2b4531ee1a0c32b50e0d8f049224","url":"https://api.github.com/users/karlitschek","html_url":"https://github.com/karlitschek","followers_url":"https://api.github.com/users/karlitschek/followers","following_url":"https://api.github.com/users/karlitschek/following{/other_user}","gists_url":"https://api.github.com/users/karlitschek/gists{/gist_id}","starred_url":"https://api.github.com/users/karlitschek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karlitschek/subscriptions","organizations_url":"https://api.github.com/users/karlitschek/orgs","repos_url":"https://api.github.com/users/karlitschek/repos","events_url":"https://api.github.com/users/karlitschek/events{/privacy}","received_events_url":"https://api.github.com/users/karlitschek/received_events","type":"user","site_admin":false},"created_at":"2013-09-03t21:37:34z","updated_at":"2013-09-03t21:37:34z","body":":+1: do you have numbers about the speed improvements?"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/23758653","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-23758653","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":23758653,"user":{"login":"deepdiver1975","id":1005065,"avatar_url":"https://gravatar.com/avatar/bdba071ed68da9ce8edae53c364902ef?d=https%3a%2f%2fidenticons.github.com%2f67e101ad9531b7d25697b76e503e062e.png&r=x","gravatar_id":"bdba071ed68da9ce8edae53c364902ef","url":"https://api.github.com/users/deepdiver1975","html_url":"https://github.com/deepdiver1975","followers_url":"https://api.github.com/users/deepdiver1975/followers","following_url":"https://api.github.com/users/deepdiver1975/following{/other_user}","gists_url":"https://api.github.com/users/deepdiver1975/gists{/gist_id}","starred_url":"https://api.github.com/users/deepdiver1975/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepdiver1975/subscriptions","organizations_url":"https://api.github.com/users/deepdiver1975/orgs","repos_url":"https://api.github.com/users/deepdiver1975/repos","events_url":"https://api.github.com/users/deepdiver1975/events{/privacy}","received_events_url":"https://api.github.com/users/deepdiver1975/received_events","type":"user","site_admin":false},"created_at":"2013-09-04t00:45:23z","updated_at":"2013-09-04t00:45:23z","body":"@guruz what have been the results? â thx"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/23822497","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-23822497","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":23822497,"user":{"login":"ringmaster","id":127738,"avatar_url":"https://gravatar.com/avatar/2e4c262dd7f74a26b28f905c0fa15048?d=https%3a%2f%2fidenticons.github.com%2f968ec2eda9ddfebb1b5a00c05b9cc674.png&r=x","gravatar_id":"2e4c262dd7f74a26b28f905c0fa15048","url":"https://api.github.com/users/ringmaster","html_url":"https://github.com/ringmaster","followers_url":"https://api.github.com/users/ringmaster/followers","following_url":"https://api.github.com/users/ringmaster/following{/other_user}","gists_url":"https://api.github.com/users/ringmaster/gists{/gist_id}","starred_url":"https://api.github.com/users/ringmaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ringmaster/subscriptions","organizations_url":"https://api.github.com/users/ringmaster/orgs","repos_url":"https://api.github.com/users/ringmaster/repos","events_url":"https://api.github.com/users/ringmaster/events{/privacy}","received_events_url":"https://api.github.com/users/ringmaster/received_events","type":"user","site_admin":false},"created_at":"2013-09-04t20:44:53z","updated_at":"2013-09-04t20:44:53z","body":"i put a little effort into getting this tested to see any performance gain, and i'm having a little trouble.  maybe someone can see what i'm missing.\r\n\r\ni wrote up a test script to time the autoloader.  the new cachingautoloader class makes it easier to switch back and forth, which i've added to the test script with a `-c` switch.  i expect that when i run the caching version a second time it should see some kind of speed improvement.  i do not.  there is the absolute possibility that there's something wrong in my config, but i can't see exactly what it might be.  hopefully someone sees where i've gone wrong or can reproduce my results.\r\n\r\nhere's the simple test script i wrote, just drop it in the webroot and run it from the command line: https://gist.github.com/ringmaster/6442496\r\n\r\nhere are the results i got:\r\n\r\n```\r\nowen@lise /var/www/oc2.lise/htdocs\r\n % php timetest.php\r\nusing autoloader\r\nall loaded\r\ntime taken: 0.63680481910706 seconds\r\nowen@lise /var/www/oc2.lise/htdocs\r\n % php timetest.php -c\r\nusing cachingautoloader\r\nall loaded\r\ntime taken: 0.65671396255493 seconds\r\ncache used: oc\\memcache\\apc\r\nowen@lise /var/www/oc2.lise/htdocs\r\n % php timetest.php -c\r\nusing cachingautoloader\r\nall loaded\r\ntime taken: 0.63957500457764 seconds\r\ncache used: oc\\memcache\\apc\r\nowen@lise /var/www/oc2.lise/htdocs\r\n % \r\n```\r\n\r\nsubsequent runs of the caching autoloader run at 0.66, 0.68, and 0.64 seconds.  pretty consistent, but not showing the faster results we'd expect."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/23861630","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-23861630","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":23861630,"user":{"login":"guruz","id":959327,"avatar_url":"https://gravatar.com/avatar/a20dd2f596a7c3e61517ecf260cb2cf6?d=https%3a%2f%2fidenticons.github.com%2fe39fcffedd172d9f75cf9bc7eff42716.png&r=x","gravatar_id":"a20dd2f596a7c3e61517ecf260cb2cf6","url":"https://api.github.com/users/guruz","html_url":"https://github.com/guruz","followers_url":"https://api.github.com/users/guruz/followers","following_url":"https://api.github.com/users/guruz/following{/other_user}","gists_url":"https://api.github.com/users/guruz/gists{/gist_id}","starred_url":"https://api.github.com/users/guruz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guruz/subscriptions","organizations_url":"https://api.github.com/users/guruz/orgs","repos_url":"https://api.github.com/users/guruz/repos","events_url":"https://api.github.com/users/guruz/events{/privacy}","received_events_url":"https://api.github.com/users/guruz/received_events","type":"user","site_admin":false},"created_at":"2013-09-05t11:40:15z","updated_at":"2013-09-05t11:40:15z","body":"*ouch* this is odd. i had benchmarked the old caching autoloader using https://github.com/owncloud/administration/blob/master/dev-tools/benchmark_single.php with proper cookie and loading the index.php and then switching between branches for having caching or not.\r\n\r\ni wonder if the \"only load one path per class\" of this commit changes things. i was wondering why we loaded multiple paths, but when i tried to only load the first one stuff broke for me. (e.g. things that were supposed to be loaded weren't). @bartv2 have you checked if for you never multiple paths get required'?"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/23904105","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-23904105","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":23904105,"user":{"login":"bartv2","id":2227877,"avatar_url":"https://gravatar.com/avatar/c2d86a0a66a4be2c904e24034e842f44?d=https%3a%2f%2fidenticons.github.com%2f05e8b1362feb118a386dfd282b20fb84.png&r=x","gravatar_id":"c2d86a0a66a4be2c904e24034e842f44","url":"https://api.github.com/users/bartv2","html_url":"https://github.com/bartv2","followers_url":"https://api.github.com/users/bartv2/followers","following_url":"https://api.github.com/users/bartv2/following{/other_user}","gists_url":"https://api.github.com/users/bartv2/gists{/gist_id}","starred_url":"https://api.github.com/users/bartv2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bartv2/subscriptions","organizations_url":"https://api.github.com/users/bartv2/orgs","repos_url":"https://api.github.com/users/bartv2/repos","events_url":"https://api.github.com/users/bartv2/events{/privacy}","received_events_url":"https://api.github.com/users/bartv2/received_events","type":"user","site_admin":false},"created_at":"2013-09-05t21:43:33z","updated_at":"2013-09-05t21:43:33z","body":"@ringmaster you need a cache that works from the command line (apc default to disabled on the cli) or time the web requests ( tool is now found at https://github.com/owncloud/administration/blob/master/performance-tests/benchmark_single.php"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/23949703","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-23949703","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":23949703,"user":{"login":"ringmaster","id":127738,"avatar_url":"https://gravatar.com/avatar/2e4c262dd7f74a26b28f905c0fa15048?d=https%3a%2f%2fidenticons.github.com%2f968ec2eda9ddfebb1b5a00c05b9cc674.png&r=x","gravatar_id":"2e4c262dd7f74a26b28f905c0fa15048","url":"https://api.github.com/users/ringmaster","html_url":"https://github.com/ringmaster","followers_url":"https://api.github.com/users/ringmaster/followers","following_url":"https://api.github.com/users/ringmaster/following{/other_user}","gists_url":"https://api.github.com/users/ringmaster/gists{/gist_id}","starred_url":"https://api.github.com/users/ringmaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ringmaster/subscriptions","organizations_url":"https://api.github.com/users/ringmaster/orgs","repos_url":"https://api.github.com/users/ringmaster/repos","events_url":"https://api.github.com/users/ringmaster/events{/privacy}","received_events_url":"https://api.github.com/users/ringmaster/received_events","type":"user","site_admin":false},"created_at":"2013-09-06t15:50:25z","updated_at":"2013-09-06t15:50:25z","body":"i ran benchmark_single.php with my cookie on the latest rework-autoloader with [`$memorycache` set to `false`](https://github.com/owncloud/core/pull/4713/files#l1r356):\r\n```\r\nowen@lise /var/www/oc2.lise/htdocs\r\n % php benchmark_single.php 20 \"http://oc2.lise/\"                \r\n...\r\navg:   0.68939859867096\r\n```\r\n\r\nthen ran it with `$memorycache` set normally so that the cache would work:\r\n```\r\nowen@lise /var/www/oc2.lise/htdocs\r\n % php benchmark_single.php 20 \"http://oc2.lise/\"\r\n...\r\navg:   0.61316061019897\r\n```\r\n\r\nthat's a 0.076 second savings.  is that what we're expecting?\r\n\r\ni ran a 100-cycle test for each scenario, also.\r\ndisabled cache: 0.64965671300888 seconds\r\nenabled cache: 0.60980947256088 seconds\r\nsavings: 0.039 seconds\r\n\r\nin regard to test prep, i manually cleared apc's opcode and user caches prior to each test run.  this test is running on dedicated (not virtual) hardware with no other services.  i also checked that the cache was being created successfully by then adding `die(var_dump($memorycache));` within the if(), and got this expected output:\r\n```\r\nobject(oc\\memcache\\apc)[2]\r\n  protected 'prefix' => string 'oc4a2c680959/autoloader' (length=23)\r\n```\r\n\r\ni inspected the values stored in the user cache, and all of the core classes i looked at had string path values stored.  there were quite a few classes from 3rdparty that had a `false` value; i'm assuming that this is because they rely on the autoloader from those libraries, rather than the core owncloud one.  perhaps we could consider how to cache those classes to a memory-based cache after the first load also?  that's just a thought; i'm not sure if it will make the difference we're expecting.\r\n\r\nfinally, i updated [my own test script](https://gist.github.com/ringmaster/6442496) for the latest code, making it work from the web, and it should be more obvious now when the cache class is created successfully, which can only be done if the cache is enabled.  i ran that through benchmark_single.php, for these results:\r\n\r\n```shell\r\nowen@lise /var/www/oc2.lise/htdocs\r\n % php benchmark_single.php 20 \"http://oc2.lise/timetest.php\"    \r\n...\r\navg:   0.40010634660721\r\nowen@lise /var/www/oc2.lise/htdocs\r\n % php benchmark_single.php 20 \"http://oc2.lise/timetest.php?c=1\"\r\n...\r\navg:   0.38847450017929\r\n```\r\n\r\n0.012 seconds faster.\r\n\r\ni'm not sure if my test regimen was more strict this time or if the code changes had this effect, but at least the results now show consistently faster speeds (by 10 to 80 milliseconds) when the cache is enabled.\r\n\r\nit's worth noting that `require_once`ing all of the core classes takes about 0.35 seconds, where bootstrapping the entire `index.php` with a valid cookie takes about 0.60 seconds.  it's pretty clear that loading the source is what takes the most time to do.  the only ways i can conceive to make this any faster would be to ensure that *all* classes - core and 3rdparty - get cached into memory, or to create a php classmap with the locations of known classes pre-registered in an array.\r\n"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/24027355","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-24027355","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":24027355,"user":{"login":"bartv2","id":2227877,"avatar_url":"https://gravatar.com/avatar/c2d86a0a66a4be2c904e24034e842f44?d=https%3a%2f%2fidenticons.github.com%2f05e8b1362feb118a386dfd282b20fb84.png&r=x","gravatar_id":"c2d86a0a66a4be2c904e24034e842f44","url":"https://api.github.com/users/bartv2","html_url":"https://github.com/bartv2","followers_url":"https://api.github.com/users/bartv2/followers","following_url":"https://api.github.com/users/bartv2/following{/other_user}","gists_url":"https://api.github.com/users/bartv2/gists{/gist_id}","starred_url":"https://api.github.com/users/bartv2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bartv2/subscriptions","organizations_url":"https://api.github.com/users/bartv2/orgs","repos_url":"https://api.github.com/users/bartv2/repos","events_url":"https://api.github.com/users/bartv2/events{/privacy}","received_events_url":"https://api.github.com/users/bartv2/received_events","type":"user","site_admin":false},"created_at":"2013-09-08t19:20:35z","updated_at":"2013-09-08t19:20:35z","body":"this was more a cleanup pr than introducing new caching, also did some tests. (used your script @ringmaster) one think in the script that effects the timing is that one of the preview classes executes a shell command, which greatly effects the timing. i'm more then happy to drop the caching in the autoloader"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/24028039","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-24028039","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":24028039,"user":{"login":"guruz","id":959327,"avatar_url":"https://gravatar.com/avatar/a20dd2f596a7c3e61517ecf260cb2cf6?d=https%3a%2f%2fidenticons.github.com%2fe39fcffedd172d9f75cf9bc7eff42716.png&r=x","gravatar_id":"a20dd2f596a7c3e61517ecf260cb2cf6","url":"https://api.github.com/users/guruz","html_url":"https://github.com/guruz","followers_url":"https://api.github.com/users/guruz/followers","following_url":"https://api.github.com/users/guruz/following{/other_user}","gists_url":"https://api.github.com/users/guruz/gists{/gist_id}","starred_url":"https://api.github.com/users/guruz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/guruz/subscriptions","organizations_url":"https://api.github.com/users/guruz/orgs","repos_url":"https://api.github.com/users/guruz/repos","events_url":"https://api.github.com/users/guruz/events{/privacy}","received_events_url":"https://api.github.com/users/guruz/received_events","type":"user","site_admin":false},"created_at":"2013-09-08t19:54:06z","updated_at":"2013-09-08t20:03:26z","body":"i'm not sure i'm understanding this correctly. you guys are measuring the wrong thing or i don't understand how this ci system here works.\r\n\r\nthere is several test failures (or whatever https://ci.owncloud.org/job/pull-request-analyser/910/ means..) with your change of my code (related to \"also only load one path per class\" probably), it doesn't help at all if the new benchmark with your code doesn't show much improvement if the tests fail;)\r\n\r\n"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/24029288","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-24029288","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":24029288,"user":{"login":"bartv2","id":2227877,"avatar_url":"https://gravatar.com/avatar/c2d86a0a66a4be2c904e24034e842f44?d=https%3a%2f%2fidenticons.github.com%2f05e8b1362feb118a386dfd282b20fb84.png&r=x","gravatar_id":"c2d86a0a66a4be2c904e24034e842f44","url":"https://api.github.com/users/bartv2","html_url":"https://github.com/bartv2","followers_url":"https://api.github.com/users/bartv2/followers","following_url":"https://api.github.com/users/bartv2/following{/other_user}","gists_url":"https://api.github.com/users/bartv2/gists{/gist_id}","starred_url":"https://api.github.com/users/bartv2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bartv2/subscriptions","organizations_url":"https://api.github.com/users/bartv2/orgs","repos_url":"https://api.github.com/users/bartv2/repos","events_url":"https://api.github.com/users/bartv2/events{/privacy}","received_events_url":"https://api.github.com/users/bartv2/received_events","type":"user","site_admin":false},"created_at":"2013-09-08t20:56:21z","updated_at":"2013-09-08t20:56:21z","body":"the unit test failures where only because of the  \"also only load one path per class\" change. \r\n"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/24031114","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-24031114","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":24031114,"user":{"login":"owncloud-bot","id":2709266,"avatar_url":"https://gravatar.com/avatar/6e9c466b35bb113112f7401859d614f6?d=https%3a%2f%2fidenticons.github.com%2ffb9254ba3a207c96653361df97807914.png&r=x","gravatar_id":"6e9c466b35bb113112f7401859d614f6","url":"https://api.github.com/users/owncloud-bot","html_url":"https://github.com/owncloud-bot","followers_url":"https://api.github.com/users/owncloud-bot/followers","following_url":"https://api.github.com/users/owncloud-bot/following{/other_user}","gists_url":"https://api.github.com/users/owncloud-bot/gists{/gist_id}","starred_url":"https://api.github.com/users/owncloud-bot/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/owncloud-bot/subscriptions","organizations_url":"https://api.github.com/users/owncloud-bot/orgs","repos_url":"https://api.github.com/users/owncloud-bot/repos","events_url":"https://api.github.com/users/owncloud-bot/events{/privacy}","received_events_url":"https://api.github.com/users/owncloud-bot/received_events","type":"user","site_admin":false},"created_at":"2013-09-08t22:34:03z","updated_at":"2013-09-08t22:34:03z","body":"test passed.\nrefer to this link for build results: https://ci.owncloud.org/job/pull-request-analyser/946/"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/24067237","html_url":"https://github.com/owncloud/core/pull/4713#issuecomment-24067237","issue_url":"https://api.github.com/repos/owncloud/core/issues/4713","id":24067237,"user":{"login":"ringmaster","id":127738,"avatar_url":"https://gravatar.com/avatar/2e4c262dd7f74a26b28f905c0fa15048?d=https%3a%2f%2fidenticons.github.com%2f968ec2eda9ddfebb1b5a00c05b9cc674.png&r=x","gravatar_id":"2e4c262dd7f74a26b28f905c0fa15048","url":"https://api.github.com/users/ringmaster","html_url":"https://github.com/ringmaster","followers_url":"https://api.github.com/users/ringmaster/followers","following_url":"https://api.github.com/users/ringmaster/following{/other_user}","gists_url":"https://api.github.com/users/ringmaster/gists{/gist_id}","starred_url":"https://api.github.com/users/ringmaster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ringmaster/subscriptions","organizations_url":"https://api.github.com/users/ringmaster/orgs","repos_url":"https://api.github.com/users/ringmaster/repos","events_url":"https://api.github.com/users/ringmaster/events{/privacy}","received_events_url":"https://api.github.com/users/ringmaster/received_events","type":"user","site_admin":false},"created_at":"2013-09-09t11:58:10z","updated_at":"2013-09-09t11:58:10z","body":"i think there is an advantage to caching in the autoloader.  i am merely surprised that we're not seeing more of an improvement.  i think it would be worthwhile to keep these caching changes and then run a profile again to see if we can identify any new specific bottlenecks.\r\n\r\noverall, i like the way this pr separates the classes out.  it makes them more testable.  and with now-passing tests...\r\n\r\n:+1:\r\n\r\nalso, i added my autoloader benchmark script at owncloud/administration@ee516dead, feel free to improve upon it."}]