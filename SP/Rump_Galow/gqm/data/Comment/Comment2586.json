[{"url":"https://api.github.com/repos/owncloud/core/issues/comments/15495162","html_url":"https://github.com/owncloud/core/issues/2586#issuecomment-15495162","issue_url":"https://api.github.com/repos/owncloud/core/issues/2586","id":15495162,"user":{"login":"deepdiver1975","id":1005065,"avatar_url":"https://gravatar.com/avatar/bdba071ed68da9ce8edae53c364902ef?d=https%3a%2f%2fidenticons.github.com%2f67e101ad9531b7d25697b76e503e062e.png&r=x","gravatar_id":"bdba071ed68da9ce8edae53c364902ef","url":"https://api.github.com/users/deepdiver1975","html_url":"https://github.com/deepdiver1975","followers_url":"https://api.github.com/users/deepdiver1975/followers","following_url":"https://api.github.com/users/deepdiver1975/following{/other_user}","gists_url":"https://api.github.com/users/deepdiver1975/gists{/gist_id}","starred_url":"https://api.github.com/users/deepdiver1975/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepdiver1975/subscriptions","organizations_url":"https://api.github.com/users/deepdiver1975/orgs","repos_url":"https://api.github.com/users/deepdiver1975/repos","events_url":"https://api.github.com/users/deepdiver1975/events{/privacy}","received_events_url":"https://api.github.com/users/deepdiver1975/received_events","type":"user","site_admin":false},"created_at":"2013-03-26t23:20:11z","updated_at":"2013-03-26t23:20:11z","body":"> implement proper dependency injection\r\n\r\nwhile you are right with the analysis that the current code basis is no fun to test i don't think having di in place will solve the issue.\r\ndi can be one part of the solution to provide testable code.\r\n\r\nin addition i have to say that in the past years i moved away from pure unit testing and used more integration and behaviour driven testing. \r\nthe current approach to test owncloud core where we require a full installation and run the test suite against sqlite, mssql and pgsql (oracle and mssql will follow) is more helpful at the moment in comparison to run unit tests in tons of mock code.\r\n\r\n>  i think effort would be much better spent on fixing this properly.\r\n\r\nyou are welcome to support us! :smile: \r\n- checkout currently untested code (e.g. as starting point https://ci.tmit.eu/job/owncloud-server%28master%29/1983/cloverphp-report/?)\r\n- write unit test for the untested\r\n- in cases where you face situations that are untestable -> open a new issue and suggest the solution.\r\n\r\n\r\n> feel free to close if you feel it's not helpful, however.\r\n\r\ni'd like to see some more specific solution proposals instead of such a general statement.\r\n"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/15498516","html_url":"https://github.com/owncloud/core/issues/2586#issuecomment-15498516","issue_url":"https://api.github.com/repos/owncloud/core/issues/2586","id":15498516,"user":{"login":"mrtorrent","id":60119,"avatar_url":"https://gravatar.com/avatar/1496b8171a80c09be580414afa013b6a?d=https%3a%2f%2fidenticons.github.com%2fc87abdf7f81b5c824b3531cd321a1f7c.png&r=x","gravatar_id":"1496b8171a80c09be580414afa013b6a","url":"https://api.github.com/users/mrtorrent","html_url":"https://github.com/mrtorrent","followers_url":"https://api.github.com/users/mrtorrent/followers","following_url":"https://api.github.com/users/mrtorrent/following{/other_user}","gists_url":"https://api.github.com/users/mrtorrent/gists{/gist_id}","starred_url":"https://api.github.com/users/mrtorrent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrtorrent/subscriptions","organizations_url":"https://api.github.com/users/mrtorrent/orgs","repos_url":"https://api.github.com/users/mrtorrent/repos","events_url":"https://api.github.com/users/mrtorrent/events{/privacy}","received_events_url":"https://api.github.com/users/mrtorrent/received_events","type":"user","site_admin":false},"created_at":"2013-03-27t00:58:51z","updated_at":"2013-03-27t10:23:01z","body":"> i don't think having di in place will solve the issue.\r\n> di can be one part of the solution to provide testable code\r\n\r\nthen let's develop a plan to create highly testable code in this project.\r\ni've made one suggestion, let's hear others. it's no good to just say\r\n\"that's not the solution.\" that doesn't take us forward, only keeps us\r\nstuck in place.\r\n\r\n\r\n> in addition i have to say that in the past years i moved away from pure\r\n> unit testing and used more integration and behaviour driven testing.\r\n\r\ni believe that a pragmatic mix of all three is best. they all benefit from\r\ndecoupling and the ability to mock out certain parts that aren't needed.\r\n\r\n\r\n> the current approach to test owncloud core where we require a full\r\n> installation\r\n\r\n...is a massive kludge. don't get me wrong, it's great that you have some\r\ntesting, but it has a long way to go, don't you agree? from the perspective\r\nof an incoming developer, it's confusing and hodgepodge.\r\n\r\nlet's be able to run some tests without having to go through a messy\r\nfilesystem/database bootstrap routine. let's have real integration tests\r\nand real unit tests, not some hybrid that doesn't know what it is.\r\n\r\n\r\n> more helpful at the moment in comparison to run unit tests in tons of\r\n> mock code.\r\n\r\nunit tests shouldn't and don't need tons of mock code. they only need that\r\nwhen the codebase is tightly coupled, as oc's is now. and unit tests serve\r\na different purpose, which is just as important in its own right.\r\n\r\n\r\n> you are welcome to support us!\r\n\r\ni am! that's why i'm sending pull requests and discussing implementing\r\nimprovements. :smile: \r\n\r\n\r\n> in cases where you face situations that are untestable -> open a new\r\n>issue and suggest the solution.\r\n\r\nthat's what this issue is. i tried to write a test for one of my pulls and\r\nrealized it was virtually untestable with all the static calls.\r\n\r\n\r\n> i'd like to see some more specific solution proposals instead of such a\r\n> general statement.\r\n\r\ni understand what you mean, but this is specific. large, but specific.\r\ngoing around tweaking bits and pieces isn't going to make this codebase\r\nmore robust and testable. you need an overarching plan that everyone's\r\nworking towards.\r\n\r\nif you have one, great, let me and other prospective developers know what\r\nit is. if not, that's no problem, but let's come up with one so that this\r\ncan be a solid, long-lived software project - not a jumble of patches and\r\ndisparate patterns and methodologies."}]