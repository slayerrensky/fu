[{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20152519","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20152519","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20152519,"user":{"login":"karlitschek","id":867445,"avatar_url":"https://gravatar.com/avatar/87ce2b4531ee1a0c32b50e0d8f049224?d=https%3a%2f%2fidenticons.github.com%2f06e7098636caebfc9c30c9f52eb905df.png&r=x","gravatar_id":"87ce2b4531ee1a0c32b50e0d8f049224","url":"https://api.github.com/users/karlitschek","html_url":"https://github.com/karlitschek","followers_url":"https://api.github.com/users/karlitschek/followers","following_url":"https://api.github.com/users/karlitschek/following{/other_user}","gists_url":"https://api.github.com/users/karlitschek/gists{/gist_id}","starred_url":"https://api.github.com/users/karlitschek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karlitschek/subscriptions","organizations_url":"https://api.github.com/users/karlitschek/orgs","repos_url":"https://api.github.com/users/karlitschek/repos","events_url":"https://api.github.com/users/karlitschek/events{/privacy}","received_events_url":"https://api.github.com/users/karlitschek/received_events","type":"user","site_admin":false},"created_at":"2013-06-27t20:25:47z","updated_at":"2013-06-27t20:25:47z","body":"@dragotin @danimo can you help with testing this?"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20178225","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20178225","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20178225,"user":{"login":"deepdiver1975","id":1005065,"avatar_url":"https://gravatar.com/avatar/bdba071ed68da9ce8edae53c364902ef?d=https%3a%2f%2fidenticons.github.com%2f67e101ad9531b7d25697b76e503e062e.png&r=x","gravatar_id":"bdba071ed68da9ce8edae53c364902ef","url":"https://api.github.com/users/deepdiver1975","html_url":"https://github.com/deepdiver1975","followers_url":"https://api.github.com/users/deepdiver1975/followers","following_url":"https://api.github.com/users/deepdiver1975/following{/other_user}","gists_url":"https://api.github.com/users/deepdiver1975/gists{/gist_id}","starred_url":"https://api.github.com/users/deepdiver1975/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepdiver1975/subscriptions","organizations_url":"https://api.github.com/users/deepdiver1975/orgs","repos_url":"https://api.github.com/users/deepdiver1975/repos","events_url":"https://api.github.com/users/deepdiver1975/events{/privacy}","received_events_url":"https://api.github.com/users/deepdiver1975/received_events","type":"user","site_admin":false},"created_at":"2013-06-28t09:21:28z","updated_at":"2013-06-28t09:21:28z","body":"we need a litmus test"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20182082","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20182082","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20182082,"user":{"login":"schiesbn","id":1589737,"avatar_url":"https://gravatar.com/avatar/8912b598c7b32dd25b87fd168e0b06b2?d=https%3a%2f%2fidenticons.github.com%2f0a323047dbe8329db30eae8dbe96e55e.png&r=x","gravatar_id":"8912b598c7b32dd25b87fd168e0b06b2","url":"https://api.github.com/users/schiesbn","html_url":"https://github.com/schiesbn","followers_url":"https://api.github.com/users/schiesbn/followers","following_url":"https://api.github.com/users/schiesbn/following{/other_user}","gists_url":"https://api.github.com/users/schiesbn/gists{/gist_id}","starred_url":"https://api.github.com/users/schiesbn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schiesbn/subscriptions","organizations_url":"https://api.github.com/users/schiesbn/orgs","repos_url":"https://api.github.com/users/schiesbn/repos","events_url":"https://api.github.com/users/schiesbn/events{/privacy}","received_events_url":"https://api.github.com/users/schiesbn/received_events","type":"user","site_admin":false},"created_at":"2013-06-28t10:56:18z","updated_at":"2013-06-28t10:56:18z","body":"i just tried it with no success. files still doesn't get uploaded to a webdav mount. i saw that you did some changes to the webdav server, but in this case we are not the server but only the client.\r\n\r\ngenerally i'm not sure if this should be fixed on the external storage side. for the external storage there shouldn't be anything special. it is just a put followed by a rename. i think the problem is how we handle the part files internally. we can't hide the part files completely because physically they are there and we want to work with them. we just don't want to show them in the web ui and don't want to serve them through our webdav server."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20182657","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20182657","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20182657,"user":{"login":"deepdiver1975","id":1005065,"avatar_url":"https://gravatar.com/avatar/bdba071ed68da9ce8edae53c364902ef?d=https%3a%2f%2fidenticons.github.com%2f67e101ad9531b7d25697b76e503e062e.png&r=x","gravatar_id":"bdba071ed68da9ce8edae53c364902ef","url":"https://api.github.com/users/deepdiver1975","html_url":"https://github.com/deepdiver1975","followers_url":"https://api.github.com/users/deepdiver1975/followers","following_url":"https://api.github.com/users/deepdiver1975/following{/other_user}","gists_url":"https://api.github.com/users/deepdiver1975/gists{/gist_id}","starred_url":"https://api.github.com/users/deepdiver1975/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepdiver1975/subscriptions","organizations_url":"https://api.github.com/users/deepdiver1975/orgs","repos_url":"https://api.github.com/users/deepdiver1975/repos","events_url":"https://api.github.com/users/deepdiver1975/events{/privacy}","received_events_url":"https://api.github.com/users/deepdiver1975/received_events","type":"user","site_admin":false},"created_at":"2013-06-28t11:13:03z","updated_at":"2013-06-28t11:13:03z","body":"disclaimer: i have no idea how the partial upload thingy in implemented.\r\n\r\nwhy do we store the part files in their target location anyhow?\r\nwhat about storing them in some 'temp folder' and as soon as we have the whole file we move it to the destination.\r\n"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20182763","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20182763","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20182763,"user":{"login":"danimo","id":1315934,"avatar_url":"https://gravatar.com/avatar/9467db6bbeaac42484603e0788aec39d?d=https%3a%2f%2fidenticons.github.com%2f296ab09e5a31dcf357f4d4784453db99.png&r=x","gravatar_id":"9467db6bbeaac42484603e0788aec39d","url":"https://api.github.com/users/danimo","html_url":"https://github.com/danimo","followers_url":"https://api.github.com/users/danimo/followers","following_url":"https://api.github.com/users/danimo/following{/other_user}","gists_url":"https://api.github.com/users/danimo/gists{/gist_id}","starred_url":"https://api.github.com/users/danimo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danimo/subscriptions","organizations_url":"https://api.github.com/users/danimo/orgs","repos_url":"https://api.github.com/users/danimo/repos","events_url":"https://api.github.com/users/danimo/events{/privacy}","received_events_url":"https://api.github.com/users/danimo/received_events","type":"user","site_admin":false},"created_at":"2013-06-28t11:15:58z","updated_at":"2013-06-28t11:15:58z","body":"@deepdiver1975 i think the argument was to ensure that a move would entail no copying (same partition/backend). i still do not agree here, we can be smarter than that, but not without enforcing certain policies."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20694931","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20694931","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20694931,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-09t18:26:04z","updated_at":"2013-07-09t18:26:04z","body":"just posting my progress. currently testing master. mounted my personal productive owncloud 5.0.7 as an external webdav share in my local development owncloud (master branch, will retest with this pr later) it seems i get six propfinds for every file in my instantupload folder:\r\n```\r\nmyip - jfd [09/jul/2013:19:58:15 +0200] \"propfind /remote.php/webdav/instantupload/img_20120401_212917.jpg http/1.1\" 207 1018 \"-\" \"-\"\r\nmyip - - [09/jul/2013:19:58:15 +0200] \"propfind /remote.php/webdav/instantupload/img_20120405_194625.jpg http/1.1\" 401 3185 \"-\" \"-\"\r\nmyip - jfd [09/jul/2013:19:58:16 +0200] \"propfind /remote.php/webdav/instantupload/img_20120405_194625.jpg http/1.1\" 207 970 \"-\" \"-\"\r\nmyip - - [09/jul/2013:19:58:16 +0200] \"propfind /remote.php/webdav/instantupload/img_20120405_194625.jpg http/1.1\" 401 3185 \"-\" \"-\"\r\nmyip - jfd [09/jul/2013:19:58:16 +0200] \"propfind /remote.php/webdav/instantupload/img_20120405_194625.jpg http/1.1\" 207 1018 \"-\" \"-\"\r\nmyip - - [09/jul/2013:19:58:16 +0200] \"propfind /remote.php/webdav/instantupload/img_20120405_194625.jpg http/1.1\" 401 3184 \"-\" \"-\"\r\nmyip - jfd [09/jul/2013:19:58:16 +0200] \"propfind /remote.php/webdav/instantupload/img_20120405_194625.jpg http/1.1\" 207 922 \"-\" \"-\"\r\nmyip - - [09/jul/2013:19:58:16 +0200] \"propfind /remote.php/webdav/instantupload/img_20120405_194625.jpg http/1.1\" 401 3185 \"-\" \"-\"\r\nmyip - jfd [09/jul/2013:19:58:16 +0200] \"propfind /remote.php/webdav/instantupload/img_20120405_194625.jpg http/1.1\" 207 1018 \"-\" \"-\"\r\nmyip - - [09/jul/2013:19:58:16 +0200] \"propfind /remote.php/webdav/instantupload/img_20120406_202733.jpg http/1.1\" 401 3185 \"-\" \"-\"\r\n```\r\n\r\nhm ... i'll need to have a look at why all those propfinds are made ... each of them first without basic auth then with. maybe the pr already fixes some of those problems. will report back once the folder shows. since i am accessing an owncloud through an owncloud there is no timeout, maybe that is the reason for a wsod some users experienced.\r\n\r\nwe should submit a useful user agent. as @danimo pointed out we should maybe fake mozilla and add owncloud to it (see https://github.com/owncloud/mirall/issues/646):\r\n```\r\nmozilla/5.0 ($os) owncloud/$ocversion files_external/$extversion curl/$curlversion\r\n```\r\nor only a subset of this..."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20731780","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20731780","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20731780,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t09:46:09z","updated_at":"2013-07-10t09:46:29z","body":"hm even with the webdav-fixes six propfinds are issued for a file:\r\n```\r\nmyip - - [10/jul/2013:11:44:29 +0200] \"propfind /remote.php/webdav//todo http/1.1\" 401 3185 \"-\" \"-\"\r\nmyip - jfd [10/jul/2013:11:44:29 +0200] \"propfind /remote.php/webdav//todo http/1.1\" 207 1034 \"-\" \"-\"\r\nmyip - - [10/jul/2013:11:44:29 +0200] \"propfind /remote.php/webdav//todo http/1.1\" 401 3185 \"-\" \"-\"\r\nmyip - jfd [10/jul/2013:11:44:29 +0200] \"propfind /remote.php/webdav//todo http/1.1\" 207 1050 \"-\" \"-\"\r\nmyip - - [10/jul/2013:11:44:29 +0200] \"propfind /remote.php/webdav//todo http/1.1\" 401 3185 \"-\" \"-\"\r\nmyip - jfd [10/jul/2013:11:44:29 +0200] \"propfind /remote.php/webdav//todo http/1.1\" 207 922 \"-\" \"-\"\r\nmyip - - [10/jul/2013:11:44:29 +0200] \"propfind /remote.php/webdav//todo http/1.1\" 401 3185 \"-\" \"-\"\r\nmyip - jfd [10/jul/2013:11:44:30 +0200] \"propfind /remote.php/webdav//todo http/1.1\" 207 4746 \"-\" \"-\"\r\n```"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20735112","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20735112","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20735112,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t11:04:44z","updated_at":"2013-07-10t11:04:44z","body":"@icewind1991 i added a small caching mechanism that uses the usercache and stores a propfind with all requested dav properties for 10 seconds, enough to reduce the number of requests for a file to two. should i add commits to this pr? did not yet find a way to make sabredav make only one propfind. "},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20744225","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20744225","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20744225,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t14:06:48z","updated_at":"2013-07-10t14:06:48z","body":"@icewind1991 beware, i rebased\r\n"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20744963","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20744963","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20744963,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t14:17:15z","updated_at":"2013-07-10t14:17:15z","body":"i found and fixed several problems:\r\n- [x] urls passed to sabre_dav_client need to be url encoded or paths with space will result in 404\r\n- [x] propfind requests can be aggregated and cached to prevent several http server calls (mimtype -> stat -> filetype -> stat)\r\n- [x] curl needs an additional trip to the server to fetch the digest secret, forcing basic auth for now\r\n\r\nthis makes webdav a lot more usable, reducing the number of requests for a single file from 6 to one.\r\n\r\n@mtrichards scanning is done in the background just fine. what webdav server are you connecting to? when the remote server also is an owncloud instance no timeout should occur.\r\n\r\n@icewind1991 @mtgap maybe we can cache the stat / mimetype / filetype requests for other filesystem backends. of course there is a possibility that we do not immediately see files if they get updated outside of owncloud, but imho the speed improvement is worth it.\r\n\r\n@karlitschek this needs a lot more testing. voting for not shipping files_external."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20747860","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20747860","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20747860,"user":{"login":"icewind1991","id":1283854,"avatar_url":"https://gravatar.com/avatar/7c20f90ca5df67dd2cad22a8e2f80d8f?d=https%3a%2f%2fidenticons.github.com%2fc818423776eba38604496a7caddc0251.png&r=x","gravatar_id":"7c20f90ca5df67dd2cad22a8e2f80d8f","url":"https://api.github.com/users/icewind1991","html_url":"https://github.com/icewind1991","followers_url":"https://api.github.com/users/icewind1991/followers","following_url":"https://api.github.com/users/icewind1991/following{/other_user}","gists_url":"https://api.github.com/users/icewind1991/gists{/gist_id}","starred_url":"https://api.github.com/users/icewind1991/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icewind1991/subscriptions","organizations_url":"https://api.github.com/users/icewind1991/orgs","repos_url":"https://api.github.com/users/icewind1991/repos","events_url":"https://api.github.com/users/icewind1991/events{/privacy}","received_events_url":"https://api.github.com/users/icewind1991/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t14:56:27z","updated_at":"2013-07-10t14:56:27z","body":"i'm planning to move the checking for updates to a background queue, completely removing the need to wait for propfind requests.\r\n\r\nthis update queue can also handle things like a minimum interval between updates"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20748806","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20748806","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20748806,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t15:09:18z","updated_at":"2013-07-10t15:09:18z","body":"@icewind1991 cool, how do you plan to fetch the folder content when a user opens a yet unscanned folder? will you insert the necessary requests at the start of the queue? what happens in the users web ui? will it pause to load?\r\n\r\ni'm asking because i feel we should populate the filelist with an eventsource. we need a mechnism that automagically updates the filelist when a file has been added to owncloud, eg, via webdav (the desktop/mobile client). an eventsource could periodically check if something has changed in the filelist or with the help of a history table and propagate changes to the web ui every ... 10 seconds?\r\n\r\nthis mechanism would allow transparent population of the filelist. whenever a file is scanned or changes we save a new entry in a file history table. the eventsource can periodically check this table and send a delta to the clients ... @karlitschek @icewind1991 @deepdiver1975 opinions?"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20748964","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20748964","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20748964,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t15:11:24z","updated_at":"2013-07-10t15:11:24z","body":"@icewind1991 what are we goint got do with this pr? it does improve the situation. maybe @mtgap  @deepdiver1975 and @vicdeo can test they can use the owncloud desktop client to sync with a folder in s3 mounted in their local development owncloud as an external webdav fs."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20751420","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20751420","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20751420,"user":{"login":"icewind1991","id":1283854,"avatar_url":"https://gravatar.com/avatar/7c20f90ca5df67dd2cad22a8e2f80d8f?d=https%3a%2f%2fidenticons.github.com%2fc818423776eba38604496a7caddc0251.png&r=x","gravatar_id":"7c20f90ca5df67dd2cad22a8e2f80d8f","url":"https://api.github.com/users/icewind1991","html_url":"https://github.com/icewind1991","followers_url":"https://api.github.com/users/icewind1991/followers","following_url":"https://api.github.com/users/icewind1991/following{/other_user}","gists_url":"https://api.github.com/users/icewind1991/gists{/gist_id}","starred_url":"https://api.github.com/users/icewind1991/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icewind1991/subscriptions","organizations_url":"https://api.github.com/users/icewind1991/orgs","repos_url":"https://api.github.com/users/icewind1991/repos","events_url":"https://api.github.com/users/icewind1991/events{/privacy}","received_events_url":"https://api.github.com/users/icewind1991/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t15:44:06z","updated_at":"2013-07-10t15:44:06z","body":"the initial plan is to only do checking for updates in the background, new, unscanned folders will just be scanned in the foreground as it currently is.\r\n\r\na mechanism to add new files to the fileui as they are detected is nice but it might be sensible to wait for that until the files app has been properly cleaned up (maybe remade in angular or something)\r\n\r\nas for this pr, i say just merge it after enough testing has been done"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20751729","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20751729","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20751729,"user":{"login":"mtgap","id":1097106,"avatar_url":"https://gravatar.com/avatar/454a73ee5feeb428d0c163a48903332c?d=https%3a%2f%2fidenticons.github.com%2f52d29a66f285a1d61125dd69ac0766b2.png&r=x","gravatar_id":"454a73ee5feeb428d0c163a48903332c","url":"https://api.github.com/users/mtgap","html_url":"https://github.com/mtgap","followers_url":"https://api.github.com/users/mtgap/followers","following_url":"https://api.github.com/users/mtgap/following{/other_user}","gists_url":"https://api.github.com/users/mtgap/gists{/gist_id}","starred_url":"https://api.github.com/users/mtgap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mtgap/subscriptions","organizations_url":"https://api.github.com/users/mtgap/orgs","repos_url":"https://api.github.com/users/mtgap/repos","events_url":"https://api.github.com/users/mtgap/events{/privacy}","received_events_url":"https://api.github.com/users/mtgap/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t15:48:15z","updated_at":"2013-07-10t15:48:15z","body":">  maybe we can cache the stat / mimetype / filetype requests for other filesystem backends. of course there is a possibility that we do not immediately see files if they get updated outside of owncloud, but imho the speed improvement is worth it.\r\n\r\ni'm already doing this in the storage backends i've written: https://github.com/owncloud/core/blob/8793acfb4e751cfdb464d259de45249cec5d6398/apps/files_external/lib/google.php#l73\r\n\r\ni've never used the cache for this. i've always just stored them in the class because it usually only needs to be cached during a single execution, e.g. scanning, downloading.\r\n\r\nin any case, you should change your method name. cachedpropfind is a noun."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20752179","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20752179","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20752179,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t15:53:46z","updated_at":"2013-07-10t15:53:46z","body":"ok, just realized that when we are using owncloud as an external webdav filesystem it will not show the .part files we try to create. @deepdiver1975 may be right that the only solution to this is saving a file to temporary location and then renaming it to the correct file. very ugly for file uploads because it might double the upload time for big files ... then again ... not beeing able to sync with files in an external fs is even more broken ... oh well ..."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20752633","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20752633","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20752633,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t15:59:41z","updated_at":"2013-07-10t15:59:41z","body":"@danimo @dragotin syncinc to an external owncloud mounted via files_external webdav will fail because owncloud will never show .part files. i shot us in the foot with trying to be smart. can we remove the special .part handling in the server and show these files to the client. it should meanwhile ignore them right? (older versions might not ... but i think reverting the magical .part file handling i added removes a lot of the complexity)"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20753675","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20753675","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20753675,"user":{"login":"dragotin","id":1070214,"avatar_url":"https://gravatar.com/avatar/af829234b31fb915704c1c65ef48eee0?d=https%3a%2f%2fidenticons.github.com%2f3392afab7f424e10623ba95a941f4d34.png&r=x","gravatar_id":"af829234b31fb915704c1c65ef48eee0","url":"https://api.github.com/users/dragotin","html_url":"https://github.com/dragotin","followers_url":"https://api.github.com/users/dragotin/followers","following_url":"https://api.github.com/users/dragotin/following{/other_user}","gists_url":"https://api.github.com/users/dragotin/gists{/gist_id}","starred_url":"https://api.github.com/users/dragotin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragotin/subscriptions","organizations_url":"https://api.github.com/users/dragotin/orgs","repos_url":"https://api.github.com/users/dragotin/repos","events_url":"https://api.github.com/users/dragotin/events{/privacy}","received_events_url":"https://api.github.com/users/dragotin/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t16:13:55z","updated_at":"2013-07-10t16:13:55z","body":"well, @butonic, can you give me a bit more context? what was the problem with the .part files? only that they appear on a directories listing through webdav? *.part files are ignored by the client for a long time."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20754806","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20754806","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20754806,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t16:30:40z","updated_at":"2013-07-10t16:30:40z","body":"it was a problem we two tried to tackle at the second  developer meeting last year. when a user uploaded a file via webdav, and browsed to the file in the web ui the filecache would pick up the partial file. this would cause the sync client to think the file had the wrong size and in the end produce sync conflicts. i introduced storing uploaded files as .part files that were renamed once the file upload completed. we then had problems with the client re downloading the .part files if the filecache picked them up. so we tried to ignore .part files in owncloud.\r\n\r\nhiding them in owncloud might not be necessary anymore. the new filecache should pick up changes to these files anyway. if the client ignores .part file i think we can just show them in the ui. @icewind1991 correct me if i am wrong."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20759119","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20759119","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20759119,"user":{"login":"icewind1991","id":1283854,"avatar_url":"https://gravatar.com/avatar/7c20f90ca5df67dd2cad22a8e2f80d8f?d=https%3a%2f%2fidenticons.github.com%2fc818423776eba38604496a7caddc0251.png&r=x","gravatar_id":"7c20f90ca5df67dd2cad22a8e2f80d8f","url":"https://api.github.com/users/icewind1991","html_url":"https://github.com/icewind1991","followers_url":"https://api.github.com/users/icewind1991/followers","following_url":"https://api.github.com/users/icewind1991/following{/other_user}","gists_url":"https://api.github.com/users/icewind1991/gists{/gist_id}","starred_url":"https://api.github.com/users/icewind1991/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icewind1991/subscriptions","organizations_url":"https://api.github.com/users/icewind1991/orgs","repos_url":"https://api.github.com/users/icewind1991/repos","events_url":"https://api.github.com/users/icewind1991/events{/privacy}","received_events_url":"https://api.github.com/users/icewind1991/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t17:33:43z","updated_at":"2013-07-10t17:33:43z","body":"storing the .part file in the filecache has other side effects such as the etag of the folder changing\r\n\r\ni still think it's best to keep them out of the filecache"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20767757","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20767757","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20767757,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t19:44:31z","updated_at":"2013-07-10t19:44:31z","body":"@icewind1991 @karlitschek @dragotin @deepdiver1975 @mtgap unless we find a better solution i think we need to fall back to uploading files to the temp folder and moving them to the target location when the upload completes.\r\n```\r\n+ files are kept out of the filecache while being uploaded\r\n+ decreases complexity\r\n+ as a consequence fixes bug of syncing to an owncloud mounted with via webdav / files_external\r\n- will increase upload time for large files due to the extra copy operation on the server (same as with chunked uploads, as they are assembled in the temp folder as well)\r\n- i'll have to revert the special .part file handling\r\n```\r\n\r\nor we add a new column to the filecache table. we could use a bitfield to store other status flags as well. that would clean up the mess of using magic numbers like 0 or -1 in the size column. (and i could use a flag for the indexing status as well) maybe:\r\n```\r\n0 = unknown\r\n1 = uploading\r\n2 = cached\r\n3 = indexed\r\n```\r\n\r\nstupid idea? use chars instead of a bitfield? opinions? "},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20771321","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20771321","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20771321,"user":{"login":"icewind1991","id":1283854,"avatar_url":"https://gravatar.com/avatar/7c20f90ca5df67dd2cad22a8e2f80d8f?d=https%3a%2f%2fidenticons.github.com%2fc818423776eba38604496a7caddc0251.png&r=x","gravatar_id":"7c20f90ca5df67dd2cad22a8e2f80d8f","url":"https://api.github.com/users/icewind1991","html_url":"https://github.com/icewind1991","followers_url":"https://api.github.com/users/icewind1991/followers","following_url":"https://api.github.com/users/icewind1991/following{/other_user}","gists_url":"https://api.github.com/users/icewind1991/gists{/gist_id}","starred_url":"https://api.github.com/users/icewind1991/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icewind1991/subscriptions","organizations_url":"https://api.github.com/users/icewind1991/orgs","repos_url":"https://api.github.com/users/icewind1991/repos","events_url":"https://api.github.com/users/icewind1991/events{/privacy}","received_events_url":"https://api.github.com/users/icewind1991/received_events","type":"user","site_admin":false},"created_at":"2013-07-10t20:38:10z","updated_at":"2013-07-10t20:38:10z","body":"how about filtering .part files from the result of getdirectorycontent.\r\nthis effectively makes the file hidden, it doesn't show up in the folder but you can access it by calling getfileinfo directly on file."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20808178","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20808178","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20808178,"user":{"login":"schiesbn","id":1589737,"avatar_url":"https://gravatar.com/avatar/8912b598c7b32dd25b87fd168e0b06b2?d=https%3a%2f%2fidenticons.github.com%2f0a323047dbe8329db30eae8dbe96e55e.png&r=x","gravatar_id":"8912b598c7b32dd25b87fd168e0b06b2","url":"https://api.github.com/users/schiesbn","html_url":"https://github.com/schiesbn","followers_url":"https://api.github.com/users/schiesbn/followers","following_url":"https://api.github.com/users/schiesbn/following{/other_user}","gists_url":"https://api.github.com/users/schiesbn/gists{/gist_id}","starred_url":"https://api.github.com/users/schiesbn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schiesbn/subscriptions","organizations_url":"https://api.github.com/users/schiesbn/orgs","repos_url":"https://api.github.com/users/schiesbn/repos","events_url":"https://api.github.com/users/schiesbn/events{/privacy}","received_events_url":"https://api.github.com/users/schiesbn/received_events","type":"user","site_admin":false},"created_at":"2013-07-11t12:44:06z","updated_at":"2013-07-11t12:46:00z","body":"@butonic that's exactly the problem  i described in the original bug report.\r\n\r\nwe don't have to show them in the web ui, the web ui could filter them out like the sync client does. i think internally the files need to be accessible and visible like every other file. just the  output channels (sync client, web ui, gallery, indexer,...) should ignore them.\r\n\r\ni like your idea of a bitfield. i think this could be also useful in other areas. e.g. in the future the trash bin could use it to just mark a file as deleted instead of moving it around."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20810920","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20810920","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20810920,"user":{"login":"dragotin","id":1070214,"avatar_url":"https://gravatar.com/avatar/af829234b31fb915704c1c65ef48eee0?d=https%3a%2f%2fidenticons.github.com%2f3392afab7f424e10623ba95a941f4d34.png&r=x","gravatar_id":"af829234b31fb915704c1c65ef48eee0","url":"https://api.github.com/users/dragotin","html_url":"https://github.com/dragotin","followers_url":"https://api.github.com/users/dragotin/followers","following_url":"https://api.github.com/users/dragotin/following{/other_user}","gists_url":"https://api.github.com/users/dragotin/gists{/gist_id}","starred_url":"https://api.github.com/users/dragotin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragotin/subscriptions","organizations_url":"https://api.github.com/users/dragotin/orgs","repos_url":"https://api.github.com/users/dragotin/repos","events_url":"https://api.github.com/users/dragotin/events{/privacy}","received_events_url":"https://api.github.com/users/dragotin/received_events","type":"user","site_admin":false},"created_at":"2013-07-11t13:26:26z","updated_at":"2013-07-11t13:26:26z","body":"i would vote against bit fields as they are error prone. why? over lunch, ask your dev friends how you they find out if the second and fith bit of 8755 are set, but not the third. they will need more time than three seconds ;)\r\n\r\ni'd recommend to use a tinyint column (mysql syntax) for each flag. that makes the records broader but that is no problem for human numbers of flags. and sql is able to handle that easily by simply not selecting the cols if not needed. the waste of bytes is insignificant. moreover, we can have multiple states within a \"flag\" of we put it into its own column, referencing @butonic s usecase.\r\n\r\nstaircase to hell is: using multiple bits of a word to describe multiple values for one flag, ie. bit 1 is the deleted flag and shows if deleted or not, bit 2-5 is the upload status. better not go there..."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20813618","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20813618","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20813618,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-11t14:08:03z","updated_at":"2013-07-11t14:08:03z","body":"@dragotin i had a bad feeleing proposing a bitfield. thx for pointing out the problems, good to have a seasoned developer around. adding a column for every flag we want to store basically is a performance improvement over using a join with a separate table (the trashcan could implement the deleted flag by joining a flag column to the filecache table, the full_text_search already uses a char column joined to the filecache to indicate indexing status)\r\nit does make sense to add these flag or status columns to the filecache as needed. at leas the core apps should benefit from the performance gain of not having to do an extra join. third party apps can go the way of a join, just as the full_text_search app does now.\r\n\r\nfor our uploading problem may i propose to use a char(1) column that represents the lifecycle of files in the cache as follows:\r\n```\r\nn = new (default)\r\nu = uploading\r\nc = cached\r\ni = indexed\r\nd = deleted\r\n```\r\nhere new is simply the default, uploading prevents a file from showing up in the web ui or the webdav interface, cached means the stat call returns accurate information, indexed means we have indexed the content (text indexed for full text search or thumbnails generated for images, movies and audio album covers?), deleted means the file does no longer show up in the web ui or the webdav interface but can be accessed from the trashcan.\r\n\r\ni ran into problems when trying to index files and needed a way to mark them as 'skip'. instead of using `s` i propose the lowercase character for the status from the above table where i can see these meaningful skip flags:\r\n```\r\nc = caching fails, skip\r\ni = indexing fails, skip\r\n```\r\n\r\nthese skipped files can be shown in the admin interface or the user interface along with a button that reports the problem in github and attaches the file (with the users acknowledgement of course) or something like that.\r\n\r\n@karlitschek @deepdiver1975 @icewind1991 @mtgap opinions?"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20817266","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20817266","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20817266,"user":{"login":"dragotin","id":1070214,"avatar_url":"https://gravatar.com/avatar/af829234b31fb915704c1c65ef48eee0?d=https%3a%2f%2fidenticons.github.com%2f3392afab7f424e10623ba95a941f4d34.png&r=x","gravatar_id":"af829234b31fb915704c1c65ef48eee0","url":"https://api.github.com/users/dragotin","html_url":"https://github.com/dragotin","followers_url":"https://api.github.com/users/dragotin/followers","following_url":"https://api.github.com/users/dragotin/following{/other_user}","gists_url":"https://api.github.com/users/dragotin/gists{/gist_id}","starred_url":"https://api.github.com/users/dragotin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dragotin/subscriptions","organizations_url":"https://api.github.com/users/dragotin/orgs","repos_url":"https://api.github.com/users/dragotin/repos","events_url":"https://api.github.com/users/dragotin/events{/privacy}","received_events_url":"https://api.github.com/users/dragotin/received_events","type":"user","site_admin":false},"created_at":"2013-07-11t14:56:58z","updated_at":"2013-07-11t14:56:58z","body":"i almost agree ;-) but i would still go for numbers, like 0 = new (default), 1 = uploading, 2 = cached etc. the reason is that it probably takes the same amount of space as a char[1] but i would expect that indexes on these numeric fields are simpler than indexes on char fields, as the indexer has to expect all strange kinds of chars. that might especially true for combined indexes (gut feeling). \r\n\r\nand there is more: i would also create a detail table that maps the numbers on the string representation of the numbers, like 0 => \"new\" and so on. that is cool because a) the database is correct in terms of referential integrity. b) its documented. \r\na lot of developers start to 'read' the database when they look into a new project and they kind of expect referential integrity. that way they can easily find out the meanings of the flags. never underestimate the documentation effect of good database layout!\r\n\r\ndoes that mean i would always do join queries? no, of course not because being expensive. but the detail table is very rare to change (even though it can if needed). so we can consider the values as constant and at worst hardcode with them. if we are more clever, we globally cache the whole detail table (which is small) in for example memcached or similar and have a global function that returns the numeric id like here:\r\n```\r\n$sql = \"select * from fscache where delete_state_id = \" +  fscache_not_deleted() + \" and user = \" + currentuserid();\r\n```\r\ni think that will give us readable code and a correct database scheme. and in case things go wrong, you still can do the join query for example to output the human readable meaning of the flag.\r\n\r\nabout the \"c\" versus \"c\" idea: that one is nice, but a) new devs have to learn this semantics first and b) database and case sensitivity are a story on its own. i never know if a where statement goes is handled case sensitive or not, as that depends on the db-type, the collation and whatnot. better stay away.\r\n\r\ni hope i am not disappointing as i would go with the normal and boring things, but i always think \"what is best to understand if you know nothing about all that s%$t.\" \r\n\r\n@butonic i hope you don't think i am out-seasoned now :-d"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20818619","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20818619","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20818619,"user":{"login":"icewind1991","id":1283854,"avatar_url":"https://gravatar.com/avatar/7c20f90ca5df67dd2cad22a8e2f80d8f?d=https%3a%2f%2fidenticons.github.com%2fc818423776eba38604496a7caddc0251.png&r=x","gravatar_id":"7c20f90ca5df67dd2cad22a8e2f80d8f","url":"https://api.github.com/users/icewind1991","html_url":"https://github.com/icewind1991","followers_url":"https://api.github.com/users/icewind1991/followers","following_url":"https://api.github.com/users/icewind1991/following{/other_user}","gists_url":"https://api.github.com/users/icewind1991/gists{/gist_id}","starred_url":"https://api.github.com/users/icewind1991/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icewind1991/subscriptions","organizations_url":"https://api.github.com/users/icewind1991/orgs","repos_url":"https://api.github.com/users/icewind1991/repos","events_url":"https://api.github.com/users/icewind1991/events{/privacy}","received_events_url":"https://api.github.com/users/icewind1991/received_events","type":"user","site_admin":false},"created_at":"2013-07-11t15:14:42z","updated_at":"2013-07-11t15:14:42z","body":"marking files as deleted in the cache only wont work since then the files still show up in the underlying storage, leading to unexpected behaviour when deleted from something like an smb share or dropox.\r\n\r\nadding a status column sounds good and i was also planning something like that for the update-queue mentioned earlier.\r\n\r\ni don't see the advantage of having a detail table for them, the status flags are \"magic\" values to begin with and i see little advantage of documenting that in the database instead of documenting it in the code/developer documentation."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20822168","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20822168","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20822168,"user":{"login":"schiesbn","id":1589737,"avatar_url":"https://gravatar.com/avatar/8912b598c7b32dd25b87fd168e0b06b2?d=https%3a%2f%2fidenticons.github.com%2f0a323047dbe8329db30eae8dbe96e55e.png&r=x","gravatar_id":"8912b598c7b32dd25b87fd168e0b06b2","url":"https://api.github.com/users/schiesbn","html_url":"https://github.com/schiesbn","followers_url":"https://api.github.com/users/schiesbn/followers","following_url":"https://api.github.com/users/schiesbn/following{/other_user}","gists_url":"https://api.github.com/users/schiesbn/gists{/gist_id}","starred_url":"https://api.github.com/users/schiesbn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/schiesbn/subscriptions","organizations_url":"https://api.github.com/users/schiesbn/orgs","repos_url":"https://api.github.com/users/schiesbn/repos","events_url":"https://api.github.com/users/schiesbn/events{/privacy}","received_events_url":"https://api.github.com/users/schiesbn/received_events","type":"user","site_admin":false},"created_at":"2013-07-11t15:58:02z","updated_at":"2013-07-11t15:58:02z","body":"on thu, 11 jul 2013 08:14:56 -0700 icewind1991 wrote:\n> marking files as deleted in the cache only wont work since then the\n> files still show up in the underlying storage, leading to unexpected\n> behaviour when deleted from something like an smb share or dropox.\n\ni'm aware of this problem. it is also just an idea which come up from\ntime to time and i think it is worth considering.\n\nsure there will be some trade-off but we would gain a large performance\nimprovement. solve time-out issues with webdav/sync clients. it would\nsolve the problem that the client sends a delete request for every file\nand no cumulative delete requests. we could integrate deleted files\nnicely by fading them in and out of the normal files list, etc. on the\nother hand of course it would mean that the user have to decide if he\nwants to use a storage (mainly) for owncloud or for something else.\n\ni think in some point of time we will have to make a decision here. but\nnot now and not in this pull request. still it would be nice if a\naddition file cache field would allow us to go this way if we decide\nthat it is the right thing to do."},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20822601","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20822601","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20822601,"user":{"login":"mtgap","id":1097106,"avatar_url":"https://gravatar.com/avatar/454a73ee5feeb428d0c163a48903332c?d=https%3a%2f%2fidenticons.github.com%2f52d29a66f285a1d61125dd69ac0766b2.png&r=x","gravatar_id":"454a73ee5feeb428d0c163a48903332c","url":"https://api.github.com/users/mtgap","html_url":"https://github.com/mtgap","followers_url":"https://api.github.com/users/mtgap/followers","following_url":"https://api.github.com/users/mtgap/following{/other_user}","gists_url":"https://api.github.com/users/mtgap/gists{/gist_id}","starred_url":"https://api.github.com/users/mtgap/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mtgap/subscriptions","organizations_url":"https://api.github.com/users/mtgap/orgs","repos_url":"https://api.github.com/users/mtgap/repos","events_url":"https://api.github.com/users/mtgap/events{/privacy}","received_events_url":"https://api.github.com/users/mtgap/received_events","type":"user","site_admin":false},"created_at":"2013-07-11t16:03:33z","updated_at":"2013-07-11t16:03:33z","body":"> here new is simply the default, uploading prevents a file from showing up in the web ui or the webdav interface, cached means the stat call returns accurate information, indexed means we have indexed the content (text indexed for full text search or thumbnails generated for images, movies and audio album covers?), deleted means the file does no longer show up in the web ui or the webdav interface but can be accessed from the trashcan.\r\n\r\ni don't understand the difference between new and uploading, both imply that the file still needs to be scanned. i also see no reason to store indexed, this should be known by the apps that scan the file content and most importantly storing this may make the false assumption that all apps have indexed the file.\r\n\r\n> marking files as deleted in the cache only wont work since then the files still show up in the underlying storage, leading to unexpected behaviour when deleted from something like an smb share or dropox.\r\n\r\ni believe we should mark files as deleted in the cache, because if files are restored we don't have to rescan them a second time. going with this method doesn't necessarily mean we leave the physical files where they are.\r\n"},{"url":"https://api.github.com/repos/owncloud/core/issues/comments/20825325","html_url":"https://github.com/owncloud/core/pull/3875#issuecomment-20825325","issue_url":"https://api.github.com/repos/owncloud/core/issues/3875","id":20825325,"user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"created_at":"2013-07-11t16:44:06z","updated_at":"2013-07-11t16:44:06z","body":"@icewind1991 can we store hidden files? @schiesbn maybe we can just move files to a `trashcan` folder in the mountpoint root as gnome does it? it think macos does it in the same way? sorry if i am asking questions that have been discussed a hundred times.\r\ni agree with @mtgap that flagging files as deleted but storing them somewhere else seems very confusing ...\r\n\r\ninstead of discussing which flags go inside the filecache we should probably just add a `cache::flagwith($fileid, $string)` and a method to query these files that implement all the joining so developers don't have to worry about it. then we can measure performance before starting to optimize the code. oh that's basically a file tagging function ... this is getting nowhere.\r\n\r\nback to step one @dragotin when you are saying that there should not be a problem any longer when the webdav api shows you .part files, i'll just unimplement the hiding feature and we'll see where wo go from there."}]