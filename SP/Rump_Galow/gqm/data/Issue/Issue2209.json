{"url":"https://api.github.com/repos/owncloud/core/issues/2209","labels_url":"https://api.github.com/repos/owncloud/core/issues/2209/labels{/name}","comments_url":"https://api.github.com/repos/owncloud/core/issues/2209/comments","events_url":"https://api.github.com/repos/owncloud/core/issues/2209/events","html_url":"https://github.com/owncloud/core/issues/2209","id":11832588,"number":2209,"title":"concurrency issues when a file or collection is locked","user":{"login":"spluchster","id":3804386,"avatar_url":"https://gravatar.com/avatar/03b6527f5b1fc565c770eddb62614ad8?d=https%3a%2f%2fidenticons.github.com%2f0f45f549368e7207a95a36b071fa5cff.png&r=x","gravatar_id":"03b6527f5b1fc565c770eddb62614ad8","url":"https://api.github.com/users/spluchster","html_url":"https://github.com/spluchster","followers_url":"https://api.github.com/users/spluchster/followers","following_url":"https://api.github.com/users/spluchster/following{/other_user}","gists_url":"https://api.github.com/users/spluchster/gists{/gist_id}","starred_url":"https://api.github.com/users/spluchster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/spluchster/subscriptions","organizations_url":"https://api.github.com/users/spluchster/orgs","repos_url":"https://api.github.com/users/spluchster/repos","events_url":"https://api.github.com/users/spluchster/events{/privacy}","received_events_url":"https://api.github.com/users/spluchster/received_events","type":"user","site_admin":false},"labels":[{"url":"https://api.github.com/repos/owncloud/core/labels/bug","name":"bug","color":"fc2929"}],"state":"closed","assignee":null,"milestone":null,"comments":3,"created_at":"2013-03-09t01:29:42z","updated_at":"2013-08-06t22:28:09z","closed_at":"2013-08-06t22:28:09z","pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"scenario 1\r\n----------------\r\n\r\n<i>what steps will reproduce the problem?</i>\r\n\r\n1. lock (exclusive write lock) existing or non-existing file a which is not under root collection b with lock http request.\r\n2. create new root collection b with mkcol http request\r\n3. create new file c under root collection b with put http request. this file might need to be quite large to satisfy step 4.\r\n4. while the upload of file c is still in progress, perform a refresh lock request for file a with lock http request. note that the lock for file a has not expired yet when the refresh lock request was issued.\r\n\r\n<i>what is the expected output? what do you see instead?</i>\r\n\r\nstep 4 should succeed and return the result almost instantly even while the upload of file c is still in progress. however, it seems that the owncloud server will only process the refresh lock request for file a after the upload of file c is fully completed.\r\n\r\n<i>what version of the product are you using? what client software are you\r\nusing?</i>\r\n\r\nowncloud community edition 4.5.7 server using mysql and running on win 2008 r2. custom written client.\r\n\r\nscenario 2\r\n---------------\r\n\r\n<i>what steps will reproduce the problem?</i>\r\n\r\n1. create new root collection a with mkcol http request\r\n2. lock (depth-infinity exclusive write lock) collection a with lock http request\r\n3. create new file b under collection a with put http request. this file might need to be quite large to satisfy step 4.\r\n4. while the upload of file b is still in progress, perform a refresh lock request for collection a with lock http request. note that the lock for collection a has not expired yet when the refresh lock request was issued.\r\n\r\n<i>what is the expected output? what do you see instead?</i>\r\n\r\nstep 4 should succeed and return the result almost instantly even while the upload of file b is still in progress. however, it seems that the owncloud server will only process the refresh lock request for collection a after the upload of file b is fully completed.\r\n\r\n<i>what version of the product are you using? what client software are you\r\nusing?</i>\r\n\r\nowncloud community edition 4.5.7 server using mysql and running on win 2008 r2. custom written client.\r\n\r\n<i>please provide any additional information below.</i>\r\n\r\nthe rationale behind fixing the issue for scenario 2 is to allow a small lock (exclusive write lock) timeout value but at the same time, allow the lock to be kept alive for as long as is needed to upload the file which might be quite large and as such, may take quite some time for the upload to complete.\r\n\r\nissue cross reference\r\n----------------------------------\r\n\r\nthis issue was posted at the following url as well.\r\n\r\nhttps://github.com/evert/sabredav/issues/317\r\n","closed_by":{"login":"jancborchardt","id":925062,"avatar_url":"https://gravatar.com/avatar/2fd3f4d5d762955e5b603794a888fa97?d=https%3a%2f%2fidenticons.github.com%2f84ec51f9ceed468217d4e13abf78da9c.png&r=x","gravatar_id":"2fd3f4d5d762955e5b603794a888fa97","url":"https://api.github.com/users/jancborchardt","html_url":"https://github.com/jancborchardt","followers_url":"https://api.github.com/users/jancborchardt/followers","following_url":"https://api.github.com/users/jancborchardt/following{/other_user}","gists_url":"https://api.github.com/users/jancborchardt/gists{/gist_id}","starred_url":"https://api.github.com/users/jancborchardt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jancborchardt/subscriptions","organizations_url":"https://api.github.com/users/jancborchardt/orgs","repos_url":"https://api.github.com/users/jancborchardt/repos","events_url":"https://api.github.com/users/jancborchardt/events{/privacy}","received_events_url":"https://api.github.com/users/jancborchardt/received_events","type":"user","site_admin":false}}