{"url":"https://api.github.com/repos/owncloud/core/issues/849","labels_url":"https://api.github.com/repos/owncloud/core/issues/849/labels{/name}","comments_url":"https://api.github.com/repos/owncloud/core/issues/849/comments","events_url":"https://api.github.com/repos/owncloud/core/issues/849/events","html_url":"https://github.com/owncloud/core/pull/849","id":9233308,"number":849,"title":"search lucene simple","user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"labels":[],"state":"closed","assignee":null,"milestone":null,"comments":14,"created_at":"2012-12-12t21:45:51z","updated_at":"2013-02-04t21:54:27z","closed_at":"2013-02-04t21:54:27z","pull_request":{"html_url":"https://github.com/owncloud/core/pull/849","diff_url":"https://github.com/owncloud/core/pull/849.diff","patch_url":"https://github.com/owncloud/core/pull/849.patch"},"body":"this is more of a proof of concept implementation than a serious pull request. nevertheless, i'd like to get some feedback on this as soon as possible.\r\n\r\n## getting it to work\r\nfirst switch your 3rdparty repo to the [search_lucene_simple_required_zend_libs](https://github.com/owncloud/3rdparty/tree/search_lucene_simple_required_zend_libs) branch for the required zend libraries.\r\nthen, in this search_lucene_simple branch you can enable the \"lucene search\" app that will allow you to do full text search in text, html and pdf (see issue #162) files.\r\n\r\nnew files beeing uploaded will automagically be indexed as background jobs. for a full rescan got to the settings view and do a reindex.\r\n\r\n## searching\r\nthere is a minor regression regarding the queries. by default the core search uses a wildcard before and after the query term to match partial strings. lucene can work like this but it will be painfully slow. on the upside you can do negations and all kinds of [query magic](http://lucene.apache.org/core/old_versioned_docs/versions/2_9_1/queryparsersyntax.html) searching for a partial term like 'term*' is ok performance wise. '*term*' ... well ... it works ... but it takes ages and you should know what you are doing.\r\n\r\n## testing\r\ni am testing this with the [zipped package of linux howtos](http://www.tldp.org/pub/linux/docs/howto/linux-html-howtos.tar.gz) from [the linux documentation project](http://www.tldp.org/docs.html#howto). aside from the html files it also has the pdf versions and contains more than 8000 html files. be warned: indexing all these files (143mb) took about 3 hours on my machine and produced an index of  <25mb. \r\n\r\n## troubleshooting\r\nin case you think something is wrong you can just start over by deleting the users lucene index folder: `.../path/to/data/user/lucene_index` and pushing the rescan button on the personal settings page.\r\n\r\n## pros & cons\r\nthe implementation uses zend_search_lucene which has pros and cons:\r\n    + plain php\r\n    + powerful query language\r\n    + based on the [lucene](http://en.wikipedia.org/wiki/lucene)  standard\r\n    + search index can be examined with [luke](http://code.google.com/p/luke/)\r\n    - slow\r\n    - unbearably slow when using wildcards in front of terms like '*term' so cannot exactly replace the current search\r\n\r\n## sidenotes\r\n\r\nalong with this i rewrote the file cache scan in the spirit of a visitor pattern with a walk method (which i should have submitted as a separate pull request, yes). a replacement implementation for the old scan method exists and a new indexer visitor is implemented to reindex all files from the personal settings page.\r\n\r\ni already discussed \"search as filter\" with @jancborchardt  (also see #821) but there is still a long way to go. for the short term i think i need something to merge search results in the browser so that i can skip adding a file that has already been found by the core file search provider and get rid of the current \"throw out all the other search providers\".\r\n\r\ni'd really like to add an abstraction over the indexing implementation so that the owncloud search api not only allows adding search providers but also changing the back end implementation. this would allow apps to say \"hey index these meta fields\" and not have to implement the search themselves.","closed_by":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false}}