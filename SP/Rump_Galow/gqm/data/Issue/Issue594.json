{"url":"https://api.github.com/repos/owncloud/core/issues/594","labels_url":"https://api.github.com/repos/owncloud/core/issues/594/labels{/name}","comments_url":"https://api.github.com/repos/owncloud/core/issues/594/comments","events_url":"https://api.github.com/repos/owncloud/core/issues/594/events","html_url":"https://github.com/owncloud/core/issues/594","id":8708954,"number":594,"title":"caldav sync of recurring events to owncloud fails","user":{"login":"neolander","id":1305080,"avatar_url":"https://gravatar.com/avatar/77cd95b7a09dd0b2c628da4abb54a8a8?d=https%3a%2f%2fidenticons.github.com%2f62cc735ea96da4aa49e37f1707f85037.png&r=x","gravatar_id":"77cd95b7a09dd0b2c628da4abb54a8a8","url":"https://api.github.com/users/neolander","html_url":"https://github.com/neolander","followers_url":"https://api.github.com/users/neolander/followers","following_url":"https://api.github.com/users/neolander/following{/other_user}","gists_url":"https://api.github.com/users/neolander/gists{/gist_id}","starred_url":"https://api.github.com/users/neolander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neolander/subscriptions","organizations_url":"https://api.github.com/users/neolander/orgs","repos_url":"https://api.github.com/users/neolander/repos","events_url":"https://api.github.com/users/neolander/events{/privacy}","received_events_url":"https://api.github.com/users/neolander/received_events","type":"user","site_admin":false},"labels":[],"state":"closed","assignee":null,"milestone":null,"comments":3,"created_at":"2012-11-27t07:05:04z","updated_at":"2012-11-28t05:47:38z","closed_at":"2012-11-27t13:25:56z","pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"i am currently attempting to use the caldav capabilities of owncloud 4.5.2 as a way to backup my android phone's calendar through dmfs' caldav-sync app. at this point, it works fine for isolated events, but recurring events won't sync properly. instead, an infinite number of copies of the recurring events will be created upon multiple syncs, on both the phone and the server.\n\ni have gotten in touch with the caldav-sync developer so as to get a clue of what is happening and determine if this was a bug in his app. comparing log files between a successful sync and a failed sync revealed that the app considered the sync to have failed due to the server returning a 504 gateway timeout error. even though it returned an error, the server would then somehow actually complete the sync on its side. the result is that on further sync attempts, the client would keep trying to sync the original event to the server, while the server would push back the events that were created during each \"failed\" sync, causing endless event duplication. server-side logs provided no useful information on the matter.\n\nwhile attempting to track down the origin of this timeout, we paid attention to the fact that recurring event sync triggered an extended period of intense database activity on server side (about 4-5 minutes of disk activity on a raid 1 of two 7200rpm hdds), during which the web interface was unavailable and would itself crash with a 504 gateway timeout error. since the default owncloud setup uses sqlite, which is hostile to concurrent database access by design, we inferred that it might be the root of our sync problems.\n\nthe next thing which i tried was thus to migrate the server to a mysql database. this dramatically reduced the aforementioned period of disk activity (down to 1min30), and the web interface will now remain available for both reviewing events and creating new ones during the sync, which suggests that concurrent database access is not a problem anymore. but in spite of this, the server will continue spitting 504s to the android client, and thus i am still facing the wrath of the endless event shower of doom...\n\nwe have also explored what caused this huge burst of database activity to begin with. our initial track was that of recurrence expansion, implemented e.g. as server code turning the recurring event into a myriad of isolated events and committing each of these as a separate record in the database. but when we contacted a sabredav developer on the matter, he replied that the version of sabredav that is used in owncloud 4.5.2 should not do this.\n\n> the latest sabredav does recurrence expansion, and it could potentially be a heavy request.\n> but, this version of owncloud would not do this.\n> \n> this user should ideally take it up with owncloud; and i would also definitely recommend against sqlite for anything remotely serious. sqlite does not do concurrence, so if something else is using sqlite, everything else waits..\n> maybe this is actually an owncloud thing i'm not aware about. that's certainly possible. i would definitely recommend for him to simply go to the owncloud bug tracker or forums.\n> \n> > are you doing recurrence expansion within a transaction?\n> \n> no, but i'm also not creating a new record for every expansion. maybe owncloud is though..\n> \n> evert\n\nand this is where we are now. as suggested by both the sabredav and caldav-sync devs, i am now submitting this as a bug on your side.\n\nrather than what is currently happening, i would expect no 504 server error when everything is going fine. the server should instead keep the connection alive as long as is required, and preferably delay any disk activity that is not strictly necessary to the sync until after it is completed, so as to improve sync performance on client side.\n\nif you believe that i did something wrong with server configuration on my side, please provide me with tweaking tips and i will be glad to try them out :) i also have set up a test owncloud account on it, so if you need that, please drop me a mail (knights_of_ni at gmx dot com) and i'll send you the login and password.","closed_by":{"login":"deepdiver1975","id":1005065,"avatar_url":"https://gravatar.com/avatar/bdba071ed68da9ce8edae53c364902ef?d=https%3a%2f%2fidenticons.github.com%2f67e101ad9531b7d25697b76e503e062e.png&r=x","gravatar_id":"bdba071ed68da9ce8edae53c364902ef","url":"https://api.github.com/users/deepdiver1975","html_url":"https://github.com/deepdiver1975","followers_url":"https://api.github.com/users/deepdiver1975/followers","following_url":"https://api.github.com/users/deepdiver1975/following{/other_user}","gists_url":"https://api.github.com/users/deepdiver1975/gists{/gist_id}","starred_url":"https://api.github.com/users/deepdiver1975/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepdiver1975/subscriptions","organizations_url":"https://api.github.com/users/deepdiver1975/orgs","repos_url":"https://api.github.com/users/deepdiver1975/repos","events_url":"https://api.github.com/users/deepdiver1975/events{/privacy}","received_events_url":"https://api.github.com/users/deepdiver1975/received_events","type":"user","site_admin":false}}