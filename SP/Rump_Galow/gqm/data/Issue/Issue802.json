{"url":"https://api.github.com/repos/owncloud/core/issues/802","labels_url":"https://api.github.com/repos/owncloud/core/issues/802/labels{/name}","comments_url":"https://api.github.com/repos/owncloud/core/issues/802/comments","events_url":"https://api.github.com/repos/owncloud/core/issues/802/events","html_url":"https://github.com/owncloud/core/issues/802","id":9128848,"number":802,"title":"oc-1919  -  regression: sharing a file publicly exposes the directory structure ","user":{"login":"msrex","id":2625328,"avatar_url":"https://gravatar.com/avatar/24738c0908dad69b83af9cc534bcca80?d=https%3a%2f%2fidenticons.github.com%2ff02814cb1648a9552774c0f932619e91.png&r=x","gravatar_id":"24738c0908dad69b83af9cc534bcca80","url":"https://api.github.com/users/msrex","html_url":"https://github.com/msrex","followers_url":"https://api.github.com/users/msrex/followers","following_url":"https://api.github.com/users/msrex/following{/other_user}","gists_url":"https://api.github.com/users/msrex/gists{/gist_id}","starred_url":"https://api.github.com/users/msrex/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msrex/subscriptions","organizations_url":"https://api.github.com/users/msrex/orgs","repos_url":"https://api.github.com/users/msrex/repos","events_url":"https://api.github.com/users/msrex/events{/privacy}","received_events_url":"https://api.github.com/users/msrex/received_events","type":"user","site_admin":false},"labels":[{"url":"https://api.github.com/repos/owncloud/core/labels/bug","name":"bug","color":"fc2929"}],"state":"closed","assignee":null,"milestone":null,"comments":2,"created_at":"2012-12-10t04:16:08z","updated_at":"2012-12-10t11:05:33z","closed_at":"2012-12-10t11:05:33z","pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"from http://bugs.owncloud.org/thebuggenie/owncloud/issues/oc-1919\nlively discussion in the comments - no idea what the outcome was.\n\ndescription:\nif you share a file with the public a link is generated like this:\n\nhttps://my.cloud.org/public.php?service=files&dir=/<username>/files/directory/subdirectory\n\nthis exposes the username and the directory structure. it was a token before and still should be a token.\n\nthis is using origin/master - 4fd53eca06e12b053f4760f2b776eab0e0e36ce9\n\n\nreproduction steps:\nshare a file publicly\n\n#4 comment posted by andreas schneider oct 05, 13:25\nwhy do you close this bug as \"not a bug\" without a comment. this is a security issue cause it exposes the username and the path!\n\n#5 comment posted by freitag oct 05, 13:26\nis there any reasoning behind that? i also think this is a regression and i also think its a bad idea to expose the file structure. a lot of people put meaning in their directory names and as we want to protect the users data as hard as we can that should not be public.\n\n#6 comment posted by jan oct 05, 23:49\ni’m the dude who said we should show the filename properly, and that tokens are inhumane, misleading and might look like spam.\n\nthis is a valid complaint though. the directory structure should _not_ be exposed. when i said that a clear filename should be used, i meant just the filename, not the directory structure. the link should be:\n\nhttps://my.cloud.org/public.php?service=files&dir=/<username>/filename.png (if anything … ideally it’s https://my.cloud.org/<username>/filename.png if that’s possible, but i guess we are limited with php.)\n\nthat’s akin to what dropbox uses, which i think is: dropbox.com/<numeric user id>/filename.png\n\ndoes that sound good? if there are file conflicts, say two files which incidentially have the same filename are shared publicly, then there could be a short token or something in addition, like:\n\nhttps://my.cloud.org/public.php?service=files&dir=/<username>/filename.png&t=rjq6\n\nemphasis on short, and only if there are file conflicts (presumably rare).\n\n#7 comment posted by andreas schneider oct 08, 09:01\nif you have:\n\nhttps://my.cloud.org/public.php?service=files&dir=/<username>/files/directory/subdirectory/filename.png\n\nand you want to share /<username>/files/directory/, why don't you just create a hash of /<username>/files/directory/ and store it in the database\n\n19ed960834d133ae12037685dfc9579fd8070d13 | /<username>/files/directory/\n\nyou end up with a url:\n\nhttps://my.cloud.org/public.php?service=files&share=19ed960834d133ae12037685dfc9579fd8070d13/subdirectory/filename.png\n\nor\n\nhttps://my.cloud.org/public.php?service=files&share=19ed960834d133ae12037685dfc9579fd8070d13/subdirectory/\n\nyou can use read string till you hit the first slash (19ed960834d133ae12037685dfc9579fd8070d13/subdirectory/filename.png) and look it up in the database and translate it to the correct path to display.\n\nthis way you don't expose the username nor the directory.\n\n#8 comment posted by ben oct 19, 04:40\nthis is a big regression!\n\ntokens are a important feature. they are used in all kinds of service, e.g. google drive or dropbox for sharing options like \"anyone who has the link\". saying they are \"inhumane, misleading and might look like spam\" is totally ignorant.\n\nwhen you share a link, you don't want to share a cumbersome password with it. but you also don't want to share your whole file collection. with a link only based on directory structure and filename it is very easy to guess the link to another file in the same or similar name directory:\n\n    a user alice wants to share a file with her friend bob and another file with eve.\n    the link for andrew looks like myowncloud.net/public.php?service=files&file=/mike/files/bob.txt\n    the link for bob looks like myowncloud.net/public.php?service=files&file=/mike/files/eve.txt\n\n\n\neve is not supposed to read bob's file. but she knows alice has shared something with bob, supposedly the same way as she did with eve. so eve can easily infer the link to bob's file.\n\nrandom-generated hash tokens prevent that. that's why they are used in all kind of webservices.\n\nso please reactivate that feature!\n\nben\n\n#9 comment posted by patrik oct 19, 16:09\ni totally agree with ben and hope the feature will be reactivated.\n\npatrik\n\n#10 comment posted by webadmin oct 20, 07:33\nin fact this is a very annoying \"feature\" in owncloud 4.5. in addition the sharing links are not properly encoded. for example if you have an space character in file- or foldername, it becomes dificult to copy and paste the link.\n\nfor a normal user (non it expert) this is not understandable. the former hash-solution was much better...\n\n#11 comment posted by rzuoas oct 22, 07:05\ni agree that this feature should be reactivated. revealing the directory structure and usernames is not a good option.\n","closed_by":{"login":"karlitschek","id":867445,"avatar_url":"https://gravatar.com/avatar/87ce2b4531ee1a0c32b50e0d8f049224?d=https%3a%2f%2fidenticons.github.com%2f06e7098636caebfc9c30c9f52eb905df.png&r=x","gravatar_id":"87ce2b4531ee1a0c32b50e0d8f049224","url":"https://api.github.com/users/karlitschek","html_url":"https://github.com/karlitschek","followers_url":"https://api.github.com/users/karlitschek/followers","following_url":"https://api.github.com/users/karlitschek/following{/other_user}","gists_url":"https://api.github.com/users/karlitschek/gists{/gist_id}","starred_url":"https://api.github.com/users/karlitschek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karlitschek/subscriptions","organizations_url":"https://api.github.com/users/karlitschek/orgs","repos_url":"https://api.github.com/users/karlitschek/repos","events_url":"https://api.github.com/users/karlitschek/events{/privacy}","received_events_url":"https://api.github.com/users/karlitschek/received_events","type":"user","site_admin":false}}