{"url":"https://api.github.com/repos/owncloud/core/issues/5159","labels_url":"https://api.github.com/repos/owncloud/core/issues/5159/labels{/name}","comments_url":"https://api.github.com/repos/owncloud/core/issues/5159/comments","events_url":"https://api.github.com/repos/owncloud/core/issues/5159/events","html_url":"https://github.com/owncloud/core/issues/5159","id":20595300,"number":5159,"title":"[discussion] external bugtracker outside of github for owncloud","user":{"login":"kiranos","id":840871,"avatar_url":"https://gravatar.com/avatar/45bcfc648c1ed90ebadd23a484d99376?d=https%3a%2f%2fidenticons.github.com%2fb2013959ac9cf127c7f4a02a6bf3cde1.png&r=x","gravatar_id":"45bcfc648c1ed90ebadd23a484d99376","url":"https://api.github.com/users/kiranos","html_url":"https://github.com/kiranos","followers_url":"https://api.github.com/users/kiranos/followers","following_url":"https://api.github.com/users/kiranos/following{/other_user}","gists_url":"https://api.github.com/users/kiranos/gists{/gist_id}","starred_url":"https://api.github.com/users/kiranos/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kiranos/subscriptions","organizations_url":"https://api.github.com/users/kiranos/orgs","repos_url":"https://api.github.com/users/kiranos/repos","events_url":"https://api.github.com/users/kiranos/events{/privacy}","received_events_url":"https://api.github.com/users/kiranos/received_events","type":"user","site_admin":false},"labels":[],"state":"closed","assignee":null,"milestone":null,"comments":1,"created_at":"2013-10-07t06:58:51z","updated_at":"2013-10-07t08:00:58z","closed_at":"2013-10-07t08:00:58z","pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"github's \"create new issue\" is very basic, i think it would be great to have something like jira or trac where you can force the one making a new issue to set component (i.e crypt/webdav etc.) and current version of owncloud, db type and php version beeing used.\r\n\r\nit would automatically organize issues for owncloud into a much better structure than todays \"everything in one big pool\" also this would put the workload on the reporter itself and with pre-defined versions/components it would just take a second or two (and required to be able to post the issue) instead of having a moderator go through each issue and manually divide them into these categories and put db tags/version tags.\r\n\r\nalso today it's common to see first comment on an issue asking which version it is (which db etc, this could also be a pre-defined value for issue reporter to choose)\r\n\r\n\r\ndownside would be to have pull requests still at gihub and githubs issues would only be to discuss the pull requests, all bug reports etc would be external. like on http://issues.owncloud.org\r\n\r\na project where the above is used successfully is xbmc (https://github.com/xbmc/xbmc) its only pull requests beeing handled by githubs issue category, all bug reports etc are handled by http://trac.xbmc.org/\r\n\r\nkeeping ownclouds issues maintained (not really done today with tags on version of owncloud db etc) is much more work for a maintainer than maintaining a new bug system.\r\n\r\njust my observations and thoughts on how to improve bug handling with minimal maintenance (so that it gets done)\r\n\r\nwith owncloud 6 around the corner and alot of bugs ni core/master  is missing versions it will be alot extra work in a few months to go through these. might even be work that is so boring so devs move on to a new bug which has these versions pre required. \r\n\r\ni know about the bug report layout but its clearly not enough as its not followed, and even if it is its not post processed with tags, a bug tracking system would do this automatically for us.\r\n\r\nthanks! :)","closed_by":{"login":"karlitschek","id":867445,"avatar_url":"https://gravatar.com/avatar/87ce2b4531ee1a0c32b50e0d8f049224?d=https%3a%2f%2fidenticons.github.com%2f06e7098636caebfc9c30c9f52eb905df.png&r=x","gravatar_id":"87ce2b4531ee1a0c32b50e0d8f049224","url":"https://api.github.com/users/karlitschek","html_url":"https://github.com/karlitschek","followers_url":"https://api.github.com/users/karlitschek/followers","following_url":"https://api.github.com/users/karlitschek/following{/other_user}","gists_url":"https://api.github.com/users/karlitschek/gists{/gist_id}","starred_url":"https://api.github.com/users/karlitschek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karlitschek/subscriptions","organizations_url":"https://api.github.com/users/karlitschek/orgs","repos_url":"https://api.github.com/users/karlitschek/repos","events_url":"https://api.github.com/users/karlitschek/events{/privacy}","received_events_url":"https://api.github.com/users/karlitschek/received_events","type":"user","site_admin":false}}