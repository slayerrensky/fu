{"url":"https://api.github.com/repos/owncloud/core/issues/3654","labels_url":"https://api.github.com/repos/owncloud/core/issues/3654/labels{/name}","comments_url":"https://api.github.com/repos/owncloud/core/issues/3654/comments","events_url":"https://api.github.com/repos/owncloud/core/issues/3654/events","html_url":"https://github.com/owncloud/core/pull/3654","id":15343168,"number":3654,"title":"introduce more robust sql execution and exception handling","user":{"login":"butonic","id":956847,"avatar_url":"https://gravatar.com/avatar/9760c134cabf66e10dbba06d7525f5c7?d=https%3a%2f%2fidenticons.github.com%2f92925ec1ad893739ed57986f18e2f060.png&r=x","gravatar_id":"9760c134cabf66e10dbba06d7525f5c7","url":"https://api.github.com/users/butonic","html_url":"https://github.com/butonic","followers_url":"https://api.github.com/users/butonic/followers","following_url":"https://api.github.com/users/butonic/following{/other_user}","gists_url":"https://api.github.com/users/butonic/gists{/gist_id}","starred_url":"https://api.github.com/users/butonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/butonic/subscriptions","organizations_url":"https://api.github.com/users/butonic/orgs","repos_url":"https://api.github.com/users/butonic/repos","events_url":"https://api.github.com/users/butonic/events{/privacy}","received_events_url":"https://api.github.com/users/butonic/received_events","type":"user","site_admin":false},"labels":[],"state":"closed","assignee":null,"milestone":null,"comments":2,"created_at":"2013-06-10t12:00:47z","updated_at":"2013-10-30t21:35:25z","closed_at":"2013-06-12t11:13:13z","pull_request":{"html_url":"https://github.com/owncloud/core/pull/3654","diff_url":"https://github.com/owncloud/core/pull/3654.diff","patch_url":"https://github.com/owncloud/core/pull/3654.patch"},"body":"ok, it's starting to get more meaty. this pr introduces the oc_db::executeaudited() method that handles execution of plain sql, an array or a prepared statement. it automagically checks the sql for forbidden usage of limit, converts plain sql or an array to a prepared statement, executes the prepared statement, and throws a databaseexception when an error occurs.\r\n\r\nbased on that i cleaned up the use of the databasesetupexception used during installation.\r\n\r\ni added the internal server error status to oc_response and made sure any exceptions get caught in index.php, remote.php, public.php and cron.php, get logged and return 500.\r\n\r\nbasically this will allow exceptions to bubble up in the phpunit tests on ci. currently most queries do not even check the error status and if they do immediately render an error page, which prevents phpunit from showing the actual error.\r\n\r\n@karlitschek @deepdiver1975 @icewind1991 @mtgap @bartv2 please review\r\n\r\noriginally part of https://github.com/owncloud/core/pull/3583","closed_by":{"login":"deepdiver1975","id":1005065,"avatar_url":"https://gravatar.com/avatar/bdba071ed68da9ce8edae53c364902ef?d=https%3a%2f%2fidenticons.github.com%2f67e101ad9531b7d25697b76e503e062e.png&r=x","gravatar_id":"bdba071ed68da9ce8edae53c364902ef","url":"https://api.github.com/users/deepdiver1975","html_url":"https://github.com/deepdiver1975","followers_url":"https://api.github.com/users/deepdiver1975/followers","following_url":"https://api.github.com/users/deepdiver1975/following{/other_user}","gists_url":"https://api.github.com/users/deepdiver1975/gists{/gist_id}","starred_url":"https://api.github.com/users/deepdiver1975/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepdiver1975/subscriptions","organizations_url":"https://api.github.com/users/deepdiver1975/orgs","repos_url":"https://api.github.com/users/deepdiver1975/repos","events_url":"https://api.github.com/users/deepdiver1975/events{/privacy}","received_events_url":"https://api.github.com/users/deepdiver1975/received_events","type":"user","site_admin":false}}