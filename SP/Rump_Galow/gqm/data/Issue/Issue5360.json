{"url":"https://api.github.com/repos/owncloud/core/issues/5360","labels_url":"https://api.github.com/repos/owncloud/core/issues/5360/labels{/name}","comments_url":"https://api.github.com/repos/owncloud/core/issues/5360/comments","events_url":"https://api.github.com/repos/owncloud/core/issues/5360/events","html_url":"https://github.com/owncloud/core/issues/5360","id":21074236,"number":5360,"title":"enforcing password policy compliance - patch","user":{"login":"svollmar","id":5555964,"avatar_url":"https://gravatar.com/avatar/1ab0ece06d4a4ba3109e9b6def6cb069?d=https%3a%2f%2fidenticons.github.com%2fcc1bb193e442ab42c6f2b92ad94226e0.png&r=x","gravatar_id":"1ab0ece06d4a4ba3109e9b6def6cb069","url":"https://api.github.com/users/svollmar","html_url":"https://github.com/svollmar","followers_url":"https://api.github.com/users/svollmar/followers","following_url":"https://api.github.com/users/svollmar/following{/other_user}","gists_url":"https://api.github.com/users/svollmar/gists{/gist_id}","starred_url":"https://api.github.com/users/svollmar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/svollmar/subscriptions","organizations_url":"https://api.github.com/users/svollmar/orgs","repos_url":"https://api.github.com/users/svollmar/repos","events_url":"https://api.github.com/users/svollmar/events{/privacy}","received_events_url":"https://api.github.com/users/svollmar/received_events","type":"user","site_admin":false},"labels":[{"url":"https://api.github.com/repos/owncloud/core/labels/enhancement","name":"enhancement","color":"02e10c"}],"state":"closed","assignee":null,"milestone":null,"comments":5,"created_at":"2013-10-16t11:27:32z","updated_at":"2013-11-06t16:34:05z","closed_at":"2013-11-06t16:34:05z","pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"we have been asked to provide our patch for enforcing password policy compliance.\r\n\r\ni know that enforcing compliance with a specific password policy is controversial and i have no intention of entering a discussion about the usefulness, technical merits or desirability of password policies here: we currently have a compulsory password policy for all our institutes - this is simply the legal situation. -\r\n\r\nwe have added a few lines of php-code to our owncloud installation (current release) so that our setup only accepts new passwords that are at least 8 characters long and use a mixture of digits, upper- and lowercase letters in addition to \"special\" characters like \",\", \";\", \"&\", etc. the attached screen shot shows that the error message reflects in what way a new password does not comply with the mps password policy (here: two criteria of the policy are not met).\r\n\r\n![screen shot 2013-09-14 at 12 05 00](https://f.cloud.github.com/assets/5555964/1341913/cc0f10d0-3655-11e3-9d34-b2b381441b1c.png)\r\n\r\n![screen shot 2013-09-14 at 09 35 51](https://f.cloud.github.com/assets/5555964/1341916/e34e83e8-3655-11e3-83f2-777ca01e29ad.png)\r\n\r\nthe following patches work well for us and have been tested with the owncloud 5.0.10 community edition. i am sure there are better ways to integrate this with owncloud, in particular the localization part is \"hard-wired\" to english/german and would profit from using owncloud's localization framework. any suggestions for improvements are welcome. \r\n\r\nmany thanks in advance, stefan\r\n\r\n*core/lostpassword/controller.php*\r\n\r\n```php\r\n\r\n<?php\r\n/**\r\n * copyright (c) 2012 bart visscher <bartv@thisnet.nl>\r\n * this file is licensed under the affero general public license version 3 or\r\n * later.\r\n * see the copying-readme file.\r\n */\r\n\r\ninclude \"mpg_password_policy.php\"; // !sv\r\n\r\nclass oc_core_lostpassword_controller {\r\n\tprotected static function displaylostpasswordpage($error, $requested) {\r\n\t\t$isencrypted = oc_app::isenabled('files_encryption');\r\n\t\toc_template::printguestpage('core/lostpassword', 'lostpassword',\r\n\t\t\tarray('error' => $error,\r\n\t\t\t\t'requested' => $requested,\r\n\t\t\t\t'isencrypted' => $isencrypted));\r\n\t}\r\n\t\r\n\tprotected static function displayresetpasswordpage($success, $args) {\r\n\t\t$route_args = array();\r\n\t\t$route_args['token'] = $args['token'];\r\n\t\t$route_args['user'] = $args['user'];\r\n\t\toc_template::printguestpage('core/lostpassword', 'resetpassword'\r\n,\r\n\t\t\tarray('success' => $success, 'args' => $route_args));\r\n\t}\r\n\r\n\tprotected static function checktoken($user, $token) {\r\n\t\treturn oc_preferences::getvalue($user, 'owncloud', 'lostpassword\r\n') === hash('sha256', $token);\r\n\t}\r\n\r\n\tpublic static function index($args) {\r\n\t\tself::displaylostpasswordpage(false, false);\r\n\t}\r\n\r\n\tpublic static function sendemail($args) {\r\n\r\n\t\t$isencrypted = oc_app::isenabled('files_encryption');\r\n\r\n\t\tif(!$isencrypted || isset($_post['continue'])) {\r\n\t\t\t$continue = true;\r\n\t\t} else {\r\n\t\t\t$continue = false;\r\n\t\t}\r\n\r\n\t\tif (oc_user::userexists($_post['user']) && $continue) {\r\n\t\t\t$token = hash('sha256', oc_util::generate_random_bytes(3\r\n0).oc_config::getvalue('passwordsalt', ''));\r\n\t\t\toc_preferences::setvalue($_post['user'], 'owncloud', 'lo\r\nstpassword',\r\n\t\t\t\thash('sha256', $token)); // hash the token again\r\n to prevent timing attacks\r\n\t\t\t$email = oc_preferences::getvalue($_post['user'], 'setti\r\nngs', 'email', '');\r\n\t\t\tif (!empty($email)) {\r\n\t\t\t\t$link = oc_helper::linktoroute('core_lostpasswor\r\nd_reset',\r\n\t\t\t\t\tarray('user' => $_post['user'], 'token' \r\n=> $token));\r\n\t\t\t\t$link = oc_helper::makeurlabsolute($link);\r\n\r\n\t\t\t\t$tmpl = new oc_template('core/lostpassword', 'em\r\nail');\r\n\t\t\t\t$tmpl->assign('link', $link, false);\r\n\t\t\t\t$msg = $tmpl->fetchpage();\r\n\t\t\t\t$l = oc_l10n::get('core');\r\n\t\t\t\t$from = ocp\\util::getdefaultemailaddress('lostpa\r\nssword-noreply');\r\n\t\t\t\ttry {\r\n\t\t\t\t\toc_mail::send($email, $_post['user'], $l\r\n->t('owncloud password reset'), $msg, $from, 'owncloud');\r\n\t\t\t\t} catch (exception $e) {\r\n\t\t\t\t\toc_template::printerrorpage( 'a problem \r\noccurs during sending the e-mail please contact your administrator.');\r\n\t\t\t\t}\r\n\t\t\t\tself::displaylostpasswordpage(false, true);\r\n\t\t\t} else {\r\n\t\t\t\tself::displaylostpasswordpage(true, false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tself::displaylostpasswordpage(true, false);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static function reset($args) {\r\n\t\t// someone wants to reset their password:\r\n\t\tif(self::checktoken($args['user'], $args['token'])) {\r\n\t\t\tself::displayresetpasswordpage(false, $args);\r\n\t\t} else {\r\n\t\t\t// someone lost their password\r\n\t\t\tself::displaylostpasswordpage(false, false);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n    public static function nfpasswordiscompliant($password) {\r\n      $errorkeys = nf_mpgpolicy::complies_with_mpg_policy($password);\r\n      return nf_mpgpolicy::get_error_text($errorkeys, \"en\", \"\\t\");\r\n    }\r\n\r\n    public static function resetpassword($args) {\r\n      if (self::checktoken($args['user'], $args['token'])) {\r\n\tif (isset($_post['password'])) {\r\n\t  \r\n\t  $epasswordcompliant = self::nfpasswordiscompliant($_post['password']);\r\n\t  if ($epasswordcompliant == \"\") {\r\n\t    \r\n\t    // previous code\r\n\t    if (oc_user::setpassword($args['user'], $_post['password'])) {\r\n\t      oc_preferences::deletekey($args['user'], 'owncloud', 'lostpassword\r\n');\r\n\t      oc_user::unsetmagicincookie();\r\n\t      self::displayresetpasswordpage(true, $args);\r\n\t    } else {\r\n\t      self::displayresetpasswordpage(false, $args);\r\n\t    }\r\n\t    \r\n\t  } // is compliant\r\n\t  else {\r\n\t    // !sv new\r\n\t    $route_args = array();\r\n\t    $route_args['token'] = $args['token'];\r\n\t    $route_args['user'] = $args['user'];\r\n\t    oc_template::printguestpage('core/lostpassword', 'resetpassword',\r\n\t\t\t\t\tarray('success' => false,\r\n\t\t\t\t\t      'error' => $epasswordcompliant,\r\n\t\t\t\t\t      'args' => $route_args));\r\n\t    return;\r\n\t  }\r\n\t} else {\r\n\t  self::reset($args);\r\n\t}\r\n      } else {\r\n\t// someone lost their password\r\n\tself::displaylostpasswordpage(false, false);\r\n      }\r\n    }\r\n}\r\n```\r\n\r\n*core/lostpassword/templates/resetpassword.php*\r\n\r\n```php\r\n<form action=\"<?php echo oc_helper::linktoroute('core_lostpassword_reset', $_['args']) ?>\" method=\"post\">\r\n\t<fieldset>\r\n\t\t<?php if($_['success']): ?>\r\n\t\t\t<h1><?php echo $l->t('your password has been changed successfully.'); ?></h1>\r\n\t\t\t<p><a href=\"<?php echo oc_helper::linkto('', 'index.php') ?>/\"><?php echo $l->t('to login page'); ?></a></p>\r\n\t\t<?php else: ?>\r\n\r\n<?php\r\n     if (isset($_['error'])) {\r\n       print '<div class=\"errors\">';\r\n       print 'sorry - your password was <b>not changed</b>, as it does not ';\r\n       print 'comply with the <a href=\"https://www.dsb.mpg.de/passwort\" style=\"color:blue;text-decoration: underline;\" target=\"blank\">\r\nmps password policy</a>:';\r\n       print  '<ul  style=\"margin-left:2em;margin-bottom:0.8em;margin-top:0.8em;list-style:disc;\">';\r\n       $elist = explode(\"\\t\", $_['error']);\r\n       $h = \"\";\r\n       foreach ($elist as $e) { $h = $h.'<li style=\"\">'.$e.'</li>'; };\r\n       print $h;\r\n       print '</ul>';\r\n       print 'please retry.';\r\n       print '</div>';\r\n     }\r\n     else {\r\n       print '<p class=\"info\">';\r\n       print \"bitte stellen sie sicher, dass ihr neues passwort den \";\r\n       print '<a href=\"https://www.dsb.mpg.de/passwort\" style=\"color:blue;text-decoration: underline;\" target=\"blank\" >mpg-vorgaben fã¼\r\nr passwã¶rter</a> entspricht.<br/><br/>';\r\n       print 'please make sure your new password conforms to the ';\r\n       print '<a href=\"https://www.dsb.mpg.de/passwort\" style=\"color:blue;text-decoration: underline;\" target=\"blank\">mps password pol\r\nicy</a>.';\r\n       print '</p>';\r\n     }\r\n\r\n?>\r\n\r\n\t\t\t<p class=\"infield\">\r\n\t\t\t\t<label for=\"password\" class=\"infield\"><?php echo $l->t( 'new password' ); ?></label>\r\n\t\t\t\t<input type=\"password\" name=\"password\" id=\"password\" value=\"\" required />\r\n\t\t\t</p>\r\n\t\t\t<input type=\"submit\" id=\"submit\" value=\"<?php echo $l->t('reset password'); ?>\" />\r\n\t\t<?php endif; ?>\r\n\t</fieldset>\r\n</form>\r\n```\r\n\r\n*core/lostpassword/mpg_password_policy.php*\r\n\r\n```mpg\r\n<?php\r\n/*\r\n  max planck institute for neurological research cologne\r\n  e-mail: vollmar@nf.mpg.de\r\n  (c) 2013\r\n*/\r\n\r\n$version = 'v 1.00 of sep 04 2013';\r\n\r\nclass nf_mpgpolicy {\r\n    const pw_ok = 'pw_ok';\r\n    const pw_length = 'pw_length';\r\n    const pw_case = 'pw_case';\r\n    const pw_number = 'pw_number';\r\n    const pw_special = 'pw_special';\r\n\r\n    public static function get_error_text($errorkeys, $lang = 'en', $glue = '') {\r\n      $errors = array('en' => array('pw_ok' => \"\",\r\n\t\t\t\t    'pw_length' => \"password must consist of at least eight characters.\", \r\n\t\t\t\t    'pw_case' => \"password does not contain upper- and lowercase characters.\",\r\n\t\t\t\t    'pw_number' => \"password does not contain any numbers.\",\r\n\t\t\t\t    'pw_special' => \"password does not contain any special symbols like ',', ';', '@' etc.\"),\r\n\t\t      'de' => array('pw_ok' => \"\",\r\n\t\t\t\t    'pw_length' => \"passwort muss mindestens aus acht zeichen bestehen.\",\r\n\t\t\t\t    'pw_case' => \"passwort enthã¤lt keine klein- und groãÿbuchtaben.\",\r\n\t\t\t\t    'pw_number' => \"passwort enthã¤lt keine zahlen.\",\r\n\t\t\t\t    'pw_special' => \"passwort enthã¤lt keine sonderzeichen wie ',', ';', '@' etc.\"));\r\n\t$message = array();\r\n        foreach ($errorkeys as $r) {\r\n            $message[] = $errors[$lang][$r];\r\n        }\r\n        return implode($glue, $message);\r\n    }\r\n\r\n    public static function complies_with_mpg_policy($password) {\r\n        $error = array();\r\n        if (strlen($password) < 8) {\r\n            $error[] = nf_mpgpolicy::pw_length;\r\n        }\r\n        if (preg_match('/[a-z]+/', $password) == false \r\n            || preg_match('/[a-z]+/', $password) == false) {\r\n            $error[] = nf_mpgpolicy::pw_case;\r\n        }\r\n        if (preg_match('/[0-9]+/', $password) == false) {\r\n            $error[] = nf_mpgpolicy::pw_number;\r\n        }\r\n        if (preg_match('/[\\'\\/~`\\!@#â§\\$%\\^&\\*\\(\\)_\\-\\+=\\{\\}\\[\\]\\|;:\"\\<\\>,\\.\\?\\\\\\]+/', $password) == false) {\r\n            $error[] = nf_mpgpolicy::pw_special;\r\n        }\r\n        if (!$error) {\r\n            $error[] = nf_mpgpolicy::pw_ok;\r\n        }\r\n        /* return implode(\"\\n\", $error); */\r\n        return $error;\r\n    }\r\n}\r\n\r\n?>\r\n```","closed_by":{"login":"jancborchardt","id":925062,"avatar_url":"https://gravatar.com/avatar/2fd3f4d5d762955e5b603794a888fa97?d=https%3a%2f%2fidenticons.github.com%2f84ec51f9ceed468217d4e13abf78da9c.png&r=x","gravatar_id":"2fd3f4d5d762955e5b603794a888fa97","url":"https://api.github.com/users/jancborchardt","html_url":"https://github.com/jancborchardt","followers_url":"https://api.github.com/users/jancborchardt/followers","following_url":"https://api.github.com/users/jancborchardt/following{/other_user}","gists_url":"https://api.github.com/users/jancborchardt/gists{/gist_id}","starred_url":"https://api.github.com/users/jancborchardt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jancborchardt/subscriptions","organizations_url":"https://api.github.com/users/jancborchardt/orgs","repos_url":"https://api.github.com/users/jancborchardt/repos","events_url":"https://api.github.com/users/jancborchardt/events{/privacy}","received_events_url":"https://api.github.com/users/jancborchardt/received_events","type":"user","site_admin":false}}