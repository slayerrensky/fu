{"url":"https://api.github.com/repos/owncloud/core/issues/4741","labels_url":"https://api.github.com/repos/owncloud/core/issues/4741/labels{/name}","comments_url":"https://api.github.com/repos/owncloud/core/issues/4741/comments","events_url":"https://api.github.com/repos/owncloud/core/issues/4741/events","html_url":"https://github.com/owncloud/core/issues/4741","id":19086989,"number":4741,"title":"oc_l10n::findlanguage() returns improper result in certain situation","user":{"login":"sfyang","id":5391250,"avatar_url":"https://gravatar.com/avatar/d4d659d7dcd1109775498e370f6c1b08?d=https%3a%2f%2fidenticons.github.com%2fdfba3418eb43bc6878ee5f9615d5209b.png&r=x","gravatar_id":"d4d659d7dcd1109775498e370f6c1b08","url":"https://api.github.com/users/sfyang","html_url":"https://github.com/sfyang","followers_url":"https://api.github.com/users/sfyang/followers","following_url":"https://api.github.com/users/sfyang/following{/other_user}","gists_url":"https://api.github.com/users/sfyang/gists{/gist_id}","starred_url":"https://api.github.com/users/sfyang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sfyang/subscriptions","organizations_url":"https://api.github.com/users/sfyang/orgs","repos_url":"https://api.github.com/users/sfyang/repos","events_url":"https://api.github.com/users/sfyang/events{/privacy}","received_events_url":"https://api.github.com/users/sfyang/received_events","type":"user","site_admin":false},"labels":[{"url":"https://api.github.com/repos/owncloud/core/labels/bug","name":"bug","color":"fc2929"}],"state":"open","assignee":null,"milestone":null,"comments":3,"created_at":"2013-09-06t03:42:03z","updated_at":"2013-10-18t13:37:47z","closed_at":null,"pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"### expected behaviour\r\nfindlanguage() method should return the best match between the available l10n translations and the accept-language header field sent by the browser.\r\n\r\n### actual behaviour\r\nin certain browser language configuration, findlanguage() does not return the best result but the second best, even the l10n translation for the best match does exist.\r\n\r\nthis is caused by the case sensitive string comparison between the elements in the \"available\" array and the header field \"$_server['http_accept_language']\". since the \"territory\" part of the locale identifier used in the l10n translations is in upper case while that sent by the browser is usually in lower case, the case sensitive \"array_search()\" function fails to find the best match.\r\n\r\n### steps to reproduce\r\n1. change the language preference settings in the browser to the following order: zh-tw > zh > en-us > en\r\n2. enter the owncloud server url into the url field and go.\r\n3. the login page shown should be in zh_tw locale, but it is actually in zh_cn.gb2312.\r\n\r\nthe first preference, zh-tw, will not match zh_tw due to the case sensitive matching, but the second preference, zh, matches the zh_cn.gb2312 since its index in the array is lower than other zh_* identifiers.\r\n\r\n### server configuration\r\noperating system:\r\nubuntu linux 12.04\r\n\r\nweb server:\r\napache 2.2.22\r\n\r\ndatabase:\r\nsqlite\r\n\r\nphp version:\r\n5.3.10\r\n\r\nowncloud version:\r\n5.0.10\r\n\r\n### client configuration\r\nbrowser:\r\nfirefox 23.0\r\nsrware iron 25.0.1400.0 (187217)\r\n\r\noperating system:\r\nubuntu linux 12.04\r\n\r\n### logs\r\n#### web server error log\r\nn/a\r\n\r\n#### owncloud log (data/owncloud.log)\r\nn/a\r\n\r\n#### browser log\r\nn/a\r\n\r\n#### possible patch to the issue:\r\nthe following unified patch was my attempt to fix this minor issue:\r\n```\r\n--- l10n.php.orig       2013-09-05 14:23:00.299819487 +0800\r\n+++ l10n.php    2013-09-05 14:23:26.324079047 +0800\r\n@@ -303,7 +303,7 @@\r\n                        foreach($accepted_languages as $i) {\r\n                                $temp = explode(';', $i);\r\n                                $temp[0] = str_replace('-', '_', $temp[0]);\r\n-                               if( ($key = array_search($temp[0], $available)) !== false) {\r\n+                               if( ($key = array_search(strtolower($temp[0]), array_map('strtolower', $available))) !== false) {\r\n                                        return $available[$key];\r\n                                }\r\n                                foreach($available as $l) {\r\n```\r\n","closed_by":null}