{"url":"https://api.github.com/repos/owncloud/core/issues/2714","labels_url":"https://api.github.com/repos/owncloud/core/issues/2714/labels{/name}","comments_url":"https://api.github.com/repos/owncloud/core/issues/2714/comments","events_url":"https://api.github.com/repos/owncloud/core/issues/2714/events","html_url":"https://github.com/owncloud/core/issues/2714","id":12793926,"number":2714,"title":"update problem 5.0.0/5.0.3 postgres","user":{"login":"mghh","id":4057724,"avatar_url":"https://gravatar.com/avatar/240ba345f5cd80e8480ce5da72a08963?d=https%3a%2f%2fidenticons.github.com%2fa1afe16a2cc10d2de9018f4ce5a2565d.png&r=x","gravatar_id":"240ba345f5cd80e8480ce5da72a08963","url":"https://api.github.com/users/mghh","html_url":"https://github.com/mghh","followers_url":"https://api.github.com/users/mghh/followers","following_url":"https://api.github.com/users/mghh/following{/other_user}","gists_url":"https://api.github.com/users/mghh/gists{/gist_id}","starred_url":"https://api.github.com/users/mghh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mghh/subscriptions","organizations_url":"https://api.github.com/users/mghh/orgs","repos_url":"https://api.github.com/users/mghh/repos","events_url":"https://api.github.com/users/mghh/events{/privacy}","received_events_url":"https://api.github.com/users/mghh/received_events","type":"user","site_admin":false},"labels":[],"state":"closed","assignee":null,"milestone":null,"comments":1,"created_at":"2013-04-04t10:19:46z","updated_at":"2013-04-04t10:58:18z","closed_at":"2013-04-04t10:58:18z","pull_request":{"html_url":null,"diff_url":null,"patch_url":null},"body":"hi,\r\n\r\ni did have an update problem from 4.5.8 to 5.0.3 (using 5.0.0 first).  we are using postgres.\r\n\r\nthe migration failed with an postgres error like \"column '{dav:}getetag' does not exist\".\r\ni'm not deep in postgres but i think string values should be single quote escaped.\r\n\r\nas a workaround this helped me:\r\n```\r\n--- ./lib/files/cache/legacy.php.orig\t2013-04-04 12:04:50.000000000 +0200\r\n+++ ./lib/files/cache/legacy.php\t2013-04-04 11:59:58.000000000 +0200\r\n@@ -90,7 +90,7 @@\r\n \t\t\t$relativepath = '';\r\n \t\t}\r\n \t\tif(is_null($query)){\r\n-\t\t\t$query = \\oc_db::prepare('select `propertyvalue` from `*prefix*properties` where `userid` = ? and propertypath = ? and propertyname = \"{dav:}getetag\"');\r\n+\t\t\t$query = \\oc_db::prepare('select `propertyvalue` from `*prefix*properties` where `userid` = ? and propertypath = ? and propertyname = \\'{dav:}getetag\\'');\r\n \t\t}\r\n \t\t$result = $query->execute(array($user, '/' . $relativepath));\r\n \t\tif ($row = $result->fetchrow()) {\r\n```\r\n\r\na better solution would be using 'propertyname = ?' in oc_db::prepare and supply the value in $query->execute(...)\r\n ","closed_by":{"login":"blizzz","id":2184312,"avatar_url":"https://gravatar.com/avatar/1898b25a9cb3aa1a0f0febd1359910b9?d=https%3a%2f%2fidenticons.github.com%2fca03acec6deadf508b75eb0cf9ba036c.png&r=x","gravatar_id":"1898b25a9cb3aa1a0f0febd1359910b9","url":"https://api.github.com/users/blizzz","html_url":"https://github.com/blizzz","followers_url":"https://api.github.com/users/blizzz/followers","following_url":"https://api.github.com/users/blizzz/following{/other_user}","gists_url":"https://api.github.com/users/blizzz/gists{/gist_id}","starred_url":"https://api.github.com/users/blizzz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/blizzz/subscriptions","organizations_url":"https://api.github.com/users/blizzz/orgs","repos_url":"https://api.github.com/users/blizzz/repos","events_url":"https://api.github.com/users/blizzz/events{/privacy}","received_events_url":"https://api.github.com/users/blizzz/received_events","type":"user","site_admin":false}}