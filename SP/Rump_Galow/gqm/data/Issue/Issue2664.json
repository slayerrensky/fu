{"url":"https://api.github.com/repos/owncloud/core/issues/2664","labels_url":"https://api.github.com/repos/owncloud/core/issues/2664/labels{/name}","comments_url":"https://api.github.com/repos/owncloud/core/issues/2664/comments","events_url":"https://api.github.com/repos/owncloud/core/issues/2664/events","html_url":"https://github.com/owncloud/core/pull/2664","id":12722324,"number":2664,"title":"expand logwriter for additional logfiles used, managed as parameter from the caller","user":{"login":"mmattel","id":3321281,"avatar_url":"https://gravatar.com/avatar/2d576241f3ac901ec52f1ec4a9c3b77b?d=https%3a%2f%2fidenticons.github.com%2f62fba4fe6711d41fdbfc7ccc04efb8f4.png&r=x","gravatar_id":"2d576241f3ac901ec52f1ec4a9c3b77b","url":"https://api.github.com/users/mmattel","html_url":"https://github.com/mmattel","followers_url":"https://api.github.com/users/mmattel/followers","following_url":"https://api.github.com/users/mmattel/following{/other_user}","gists_url":"https://api.github.com/users/mmattel/gists{/gist_id}","starred_url":"https://api.github.com/users/mmattel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmattel/subscriptions","organizations_url":"https://api.github.com/users/mmattel/orgs","repos_url":"https://api.github.com/users/mmattel/repos","events_url":"https://api.github.com/users/mmattel/events{/privacy}","received_events_url":"https://api.github.com/users/mmattel/received_events","type":"user","site_admin":false},"labels":[],"state":"closed","assignee":null,"milestone":null,"comments":18,"created_at":"2013-04-02t19:56:23z","updated_at":"2013-04-08t20:07:26z","closed_at":"2013-04-08t20:07:26z","pull_request":{"html_url":"https://github.com/owncloud/core/pull/2664","diff_url":"https://github.com/owncloud/core/pull/2664.diff","patch_url":"https://github.com/owncloud/core/pull/2664.patch"},"body":"this is a extension of merger # 2620 (log db queries) from emerzh.\r\n\r\nthe basic idea behind is, that someone wants to write additional log information, but not into the main log. thanks to @tanghus who encouraged me writing this code. i apologise in advance if i made something wrong.\r\n\r\nwhat has been changed:\r\n\r\n1.) you can create in config.php additional parameters, as best in pairs, so that coding could hook on. the first parameter is used to check if a special log needs to be written (true/false), the second parameter is used to define the log file name. therefore i have renamed the original first parameter name defined by emerzh from log_query to log_sql_query to be specific. the second parameter is new and called in this case log_sql_file. you can see the description in config\\config.sample.php. creating new parameter sets is logical and easy and i could think about log_music_query and log_music_file, but this is just an idea...\r\n\r\n2.) i enhanced the calls from emerzh in lib\\db.php with a parameter, eg:\r\noc_log::write('core', 'db prepare : '.$query, oc_log::debug, oc_config::getvalue(\"log_sql_file\"));\r\nwhere the last parameter is optional and is in case it is used the log filename the logger writes to.\r\non the example given you can see, that it is not breaking existing calls, but you can now make calls where you can decide if the log entry is written to a separate logfile not filling up the main oc log.\r\n\r\n3.) of course lib\\log.php needed a upgrade to manage existing calls and a new call style with the additional logfile name as parameter.\r\n\r\n4.) most critical was lib\\log\\owncloud.php because we need to manage different cases. what i have done there is, that i separated the log path from the log filename. this because, we always write to the log path but maybe to a different log file. of course we have to manage various szenarios where paths are valid and writable. if not, i write a warning message to the default log path/name. btw i have seen, that in the original code the config parameter \"logfile\" was at least not clear to me (but i may be wrong with my view), because i interpreted it as path+file because of the code (if (!file_exists(self::$logfile)) which needs a path to have a proper result. i have here set following definition on config.logfile. if a path is present, use it as alternative logging path, if only a filename is set use the default path and the filename given.\r\n\r\nthere is one restriction, we do not write into syslog, owncloud log only.\r\n\r\nwe can now use standard logging and enhanced (special) logging. the call format for special logging is:\r\n\tstandard:\toc_log::write($app, $message, $level);\r\n\tspecial:\toc_log::write($app, $message, $level, oc_config::getvalue(\"config-parameter\"));\r\nwhere config-parameter is the config name used for the <filename> definition\r\n\r\ni have tested this in all combinations and it works well, but i please you to do additional checking and review.\r\n\r\nbest regards\r\nmartin\r\n\r\nbtw: the idea some weeks ago posted to have split config files is getting more and more attractive...","closed_by":{"login":"deepdiver1975","id":1005065,"avatar_url":"https://gravatar.com/avatar/bdba071ed68da9ce8edae53c364902ef?d=https%3a%2f%2fidenticons.github.com%2f67e101ad9531b7d25697b76e503e062e.png&r=x","gravatar_id":"bdba071ed68da9ce8edae53c364902ef","url":"https://api.github.com/users/deepdiver1975","html_url":"https://github.com/deepdiver1975","followers_url":"https://api.github.com/users/deepdiver1975/followers","following_url":"https://api.github.com/users/deepdiver1975/following{/other_user}","gists_url":"https://api.github.com/users/deepdiver1975/gists{/gist_id}","starred_url":"https://api.github.com/users/deepdiver1975/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepdiver1975/subscriptions","organizations_url":"https://api.github.com/users/deepdiver1975/orgs","repos_url":"https://api.github.com/users/deepdiver1975/repos","events_url":"https://api.github.com/users/deepdiver1975/events{/privacy}","received_events_url":"https://api.github.com/users/deepdiver1975/received_events","type":"user","site_admin":false}}